   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,4
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "aes.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .text.KeyExpansion,"ax",%progbits
  16              	 .align 1
  17              	 .arch armv7e-m
  18              	 .syntax unified
  19              	 .thumb
  20              	 .thumb_func
  21              	 .fpu softvfp
  23              	KeyExpansion:
  24              	.LFB2:
  25              	 .file 1 ".././crypto/tiny-AES128-C/aes.c"
   1:.././crypto/tiny-AES128-C/aes.c **** /* This AES-128 comes from https://github.com/kokke/tiny-AES128-C which is released into public dom
   2:.././crypto/tiny-AES128-C/aes.c **** 
   3:.././crypto/tiny-AES128-C/aes.c **** /*
   4:.././crypto/tiny-AES128-C/aes.c **** 
   5:.././crypto/tiny-AES128-C/aes.c **** This is an implementation of the AES128 algorithm, specifically ECB and CBC mode.
   6:.././crypto/tiny-AES128-C/aes.c **** 
   7:.././crypto/tiny-AES128-C/aes.c **** The implementation is verified against the test vectors in:
   8:.././crypto/tiny-AES128-C/aes.c ****   National Institute of Standards and Technology Special Publication 800-38A 2001 ED
   9:.././crypto/tiny-AES128-C/aes.c **** 
  10:.././crypto/tiny-AES128-C/aes.c **** ECB-AES128
  11:.././crypto/tiny-AES128-C/aes.c **** ----------
  12:.././crypto/tiny-AES128-C/aes.c **** 
  13:.././crypto/tiny-AES128-C/aes.c ****   plain-text:
  14:.././crypto/tiny-AES128-C/aes.c ****     6bc1bee22e409f96e93d7e117393172a
  15:.././crypto/tiny-AES128-C/aes.c ****     ae2d8a571e03ac9c9eb76fac45af8e51
  16:.././crypto/tiny-AES128-C/aes.c ****     30c81c46a35ce411e5fbc1191a0a52ef
  17:.././crypto/tiny-AES128-C/aes.c ****     f69f2445df4f9b17ad2b417be66c3710
  18:.././crypto/tiny-AES128-C/aes.c **** 
  19:.././crypto/tiny-AES128-C/aes.c ****   key:
  20:.././crypto/tiny-AES128-C/aes.c ****     2b7e151628aed2a6abf7158809cf4f3c
  21:.././crypto/tiny-AES128-C/aes.c **** 
  22:.././crypto/tiny-AES128-C/aes.c ****   resulting cipher
  23:.././crypto/tiny-AES128-C/aes.c ****     3ad77bb40d7a3660a89ecaf32466ef97 
  24:.././crypto/tiny-AES128-C/aes.c ****     f5d3d58503b9699de785895a96fdbaaf 
  25:.././crypto/tiny-AES128-C/aes.c ****     43b1cd7f598ece23881b00e3ed030688 
  26:.././crypto/tiny-AES128-C/aes.c ****     7b0c785e27e8ad3f8223207104725dd4 
  27:.././crypto/tiny-AES128-C/aes.c **** 
  28:.././crypto/tiny-AES128-C/aes.c **** 
  29:.././crypto/tiny-AES128-C/aes.c **** NOTE:   String length must be evenly divisible by 16byte (str_len % 16 == 0)
  30:.././crypto/tiny-AES128-C/aes.c ****         You should pad the end of the string with zeros if this is not the case.
  31:.././crypto/tiny-AES128-C/aes.c **** 
  32:.././crypto/tiny-AES128-C/aes.c **** */
  33:.././crypto/tiny-AES128-C/aes.c **** 
  34:.././crypto/tiny-AES128-C/aes.c **** 
  35:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  36:.././crypto/tiny-AES128-C/aes.c **** /* Includes:                                                                 */
  37:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  38:.././crypto/tiny-AES128-C/aes.c **** #include <stdint.h>
  39:.././crypto/tiny-AES128-C/aes.c **** #include <string.h> // CBC mode, for memset
  40:.././crypto/tiny-AES128-C/aes.c **** #include "aes.h"
  41:.././crypto/tiny-AES128-C/aes.c **** 
  42:.././crypto/tiny-AES128-C/aes.c **** 
  43:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  44:.././crypto/tiny-AES128-C/aes.c **** /* Defines:                                                                  */
  45:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  46:.././crypto/tiny-AES128-C/aes.c **** // The number of columns comprising a state in AES. This is a constant in AES. Value=4
  47:.././crypto/tiny-AES128-C/aes.c **** #define Nb 4
  48:.././crypto/tiny-AES128-C/aes.c **** // The number of 32 bit words in a key.
  49:.././crypto/tiny-AES128-C/aes.c **** #define Nk 4
  50:.././crypto/tiny-AES128-C/aes.c **** // Key length in bytes [128 bit]
  51:.././crypto/tiny-AES128-C/aes.c **** #define KEYLEN 16
  52:.././crypto/tiny-AES128-C/aes.c **** // The number of rounds in AES Cipher.
  53:.././crypto/tiny-AES128-C/aes.c **** #define Nr 10
  54:.././crypto/tiny-AES128-C/aes.c **** 
  55:.././crypto/tiny-AES128-C/aes.c **** // jcallan@github points out that declaring Multiply as a function 
  56:.././crypto/tiny-AES128-C/aes.c **** // reduces code size considerably with the Keil ARM compiler.
  57:.././crypto/tiny-AES128-C/aes.c **** // See this link for more information: https://github.com/kokke/tiny-AES128-C/pull/3
  58:.././crypto/tiny-AES128-C/aes.c **** #ifndef MULTIPLY_AS_A_FUNCTION
  59:.././crypto/tiny-AES128-C/aes.c ****   #define MULTIPLY_AS_A_FUNCTION 0
  60:.././crypto/tiny-AES128-C/aes.c **** #endif
  61:.././crypto/tiny-AES128-C/aes.c **** 
  62:.././crypto/tiny-AES128-C/aes.c **** 
  63:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  64:.././crypto/tiny-AES128-C/aes.c **** /* Private variables:                                                        */
  65:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
  66:.././crypto/tiny-AES128-C/aes.c **** // state - array holding the intermediate results during decryption.
  67:.././crypto/tiny-AES128-C/aes.c **** typedef uint8_t state_t[4][4];
  68:.././crypto/tiny-AES128-C/aes.c **** static state_t* state;
  69:.././crypto/tiny-AES128-C/aes.c **** 
  70:.././crypto/tiny-AES128-C/aes.c **** // The array that stores the round keys.
  71:.././crypto/tiny-AES128-C/aes.c **** static uint8_t RoundKey[176];
  72:.././crypto/tiny-AES128-C/aes.c **** 
  73:.././crypto/tiny-AES128-C/aes.c **** static uint8_t input_save[16];
  74:.././crypto/tiny-AES128-C/aes.c **** 
  75:.././crypto/tiny-AES128-C/aes.c **** // The Key input to the AES Program
  76:.././crypto/tiny-AES128-C/aes.c **** static uint8_t* Key;
  77:.././crypto/tiny-AES128-C/aes.c **** 
  78:.././crypto/tiny-AES128-C/aes.c **** // The lookup-tables are marked const so they can be placed in read-only storage instead of RAM
  79:.././crypto/tiny-AES128-C/aes.c **** // The numbers below can be computed dynamically trading ROM for RAM - 
  80:.././crypto/tiny-AES128-C/aes.c **** // This can be useful in (embedded) bootloader applications, where ROM is often limited.
  81:.././crypto/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t sbox[256] =   {
  82:.././crypto/tiny-AES128-C/aes.c ****   //0     1    2      3     4    5     6     7      8    9     A      B    C     D     E     F
  83:.././crypto/tiny-AES128-C/aes.c ****   0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76,
  84:.././crypto/tiny-AES128-C/aes.c ****   0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0,
  85:.././crypto/tiny-AES128-C/aes.c ****   0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15,
  86:.././crypto/tiny-AES128-C/aes.c ****   0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75,
  87:.././crypto/tiny-AES128-C/aes.c ****   0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84,
  88:.././crypto/tiny-AES128-C/aes.c ****   0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf,
  89:.././crypto/tiny-AES128-C/aes.c ****   0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8,
  90:.././crypto/tiny-AES128-C/aes.c ****   0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2,
  91:.././crypto/tiny-AES128-C/aes.c ****   0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73,
  92:.././crypto/tiny-AES128-C/aes.c ****   0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb,
  93:.././crypto/tiny-AES128-C/aes.c ****   0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79,
  94:.././crypto/tiny-AES128-C/aes.c ****   0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08,
  95:.././crypto/tiny-AES128-C/aes.c ****   0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a,
  96:.././crypto/tiny-AES128-C/aes.c ****   0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
  97:.././crypto/tiny-AES128-C/aes.c ****   0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
  98:.././crypto/tiny-AES128-C/aes.c ****   0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16 };
  99:.././crypto/tiny-AES128-C/aes.c **** 
 100:.././crypto/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t rsbox[256] =
 101:.././crypto/tiny-AES128-C/aes.c **** { 0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb,
 102:.././crypto/tiny-AES128-C/aes.c ****   0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb,
 103:.././crypto/tiny-AES128-C/aes.c ****   0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e,
 104:.././crypto/tiny-AES128-C/aes.c ****   0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25,
 105:.././crypto/tiny-AES128-C/aes.c ****   0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92,
 106:.././crypto/tiny-AES128-C/aes.c ****   0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84,
 107:.././crypto/tiny-AES128-C/aes.c ****   0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06,
 108:.././crypto/tiny-AES128-C/aes.c ****   0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b,
 109:.././crypto/tiny-AES128-C/aes.c ****   0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73,
 110:.././crypto/tiny-AES128-C/aes.c ****   0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e,
 111:.././crypto/tiny-AES128-C/aes.c ****   0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b,
 112:.././crypto/tiny-AES128-C/aes.c ****   0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4,
 113:.././crypto/tiny-AES128-C/aes.c ****   0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f,
 114:.././crypto/tiny-AES128-C/aes.c ****   0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef,
 115:.././crypto/tiny-AES128-C/aes.c ****   0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61,
 116:.././crypto/tiny-AES128-C/aes.c ****   0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d };
 117:.././crypto/tiny-AES128-C/aes.c **** 
 118:.././crypto/tiny-AES128-C/aes.c **** 
 119:.././crypto/tiny-AES128-C/aes.c **** // The round constant word array, Rcon[i], contains the values given by 
 120:.././crypto/tiny-AES128-C/aes.c **** // x to th e power (i-1) being powers of x (x is denoted as {02}) in the field GF(2^8)
 121:.././crypto/tiny-AES128-C/aes.c **** // Note that i starts at 1, not 0).
 122:.././crypto/tiny-AES128-C/aes.c **** AES_CONST_VAR uint8_t Rcon[11] = {
 123:.././crypto/tiny-AES128-C/aes.c ****   0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36
 124:.././crypto/tiny-AES128-C/aes.c **** };
 125:.././crypto/tiny-AES128-C/aes.c **** 
 126:.././crypto/tiny-AES128-C/aes.c **** 
 127:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 128:.././crypto/tiny-AES128-C/aes.c **** /* Private functions:                                                        */
 129:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 130:.././crypto/tiny-AES128-C/aes.c **** static uint8_t getSBoxValue(uint8_t num)
 131:.././crypto/tiny-AES128-C/aes.c **** {
 132:.././crypto/tiny-AES128-C/aes.c ****   return sbox[num];
 133:.././crypto/tiny-AES128-C/aes.c **** }
 134:.././crypto/tiny-AES128-C/aes.c **** 
 135:.././crypto/tiny-AES128-C/aes.c **** static uint8_t getSBoxInvert(uint8_t num)
 136:.././crypto/tiny-AES128-C/aes.c **** {
 137:.././crypto/tiny-AES128-C/aes.c ****   return rsbox[num];
 138:.././crypto/tiny-AES128-C/aes.c **** }
 139:.././crypto/tiny-AES128-C/aes.c **** 
 140:.././crypto/tiny-AES128-C/aes.c **** // This function produces Nb(Nr+1) round keys. The round keys are used in each round to decrypt the
 141:.././crypto/tiny-AES128-C/aes.c **** static void KeyExpansion(void)
 142:.././crypto/tiny-AES128-C/aes.c **** {
  26              	 .loc 1 142 1 view-0
  27              	 .cfi_startproc
  28              	 
  29              	 
 143:.././crypto/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  30              	 .loc 1 143 3 view .LVU1
 144:.././crypto/tiny-AES128-C/aes.c ****   uint8_t tempa[4]; // Used for the column/row operations
  31              	 .loc 1 144 3 view .LVU2
 145:.././crypto/tiny-AES128-C/aes.c ****   
 146:.././crypto/tiny-AES128-C/aes.c ****   // The first round key is the key itself.
 147:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < Nk; ++i)
  32              	 .loc 1 147 3 view .LVU3
  33              	.LVL0:
  34              	 .loc 1 147 14 view .LVU4
 142:.././crypto/tiny-AES128-C/aes.c ****   uint32_t i, j, k;
  35              	 .loc 1 142 1 is_stmt 0 view .LVU5
  36 0000 73B5     	 push {r0,r1,r4,r5,r6,lr}
  37              	.LCFI0:
  38              	 .cfi_def_cfa_offset 24
  39              	 .cfi_offset 4,-16
  40              	 .cfi_offset 5,-12
  41              	 .cfi_offset 6,-8
  42              	 .cfi_offset 14,-4
 148:.././crypto/tiny-AES128-C/aes.c ****   {
 149:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 0] = Key[(i * 4) + 0];
  43              	 .loc 1 149 32 view .LVU6
  44 0002 274B     	 ldr r3,.L9
  45 0004 274A     	 ldr r2,.L9+4
  46 0006 1B68     	 ldr r3,[r3]
  47 0008 03F11001 	 add r1,r3,#16
  48              	.LVL1:
  49              	.L2:
  50              	 .loc 1 149 5 is_stmt 1 discriminator 3 view .LVU7
  51              	 .loc 1 149 32 is_stmt 0 discriminator 3 view .LVU8
  52 000c 1878     	 ldrb r0,[r3]
  53              	 .loc 1 149 27 discriminator 3 view .LVU9
  54 000e 1070     	 strb r0,[r2]
 150:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 1] = Key[(i * 4) + 1];
  55              	 .loc 1 150 5 is_stmt 1 discriminator 3 view .LVU10
  56              	 .loc 1 150 32 is_stmt 0 discriminator 3 view .LVU11
  57 0010 5878     	 ldrb r0,[r3,#1]
  58              	 .loc 1 150 27 discriminator 3 view .LVU12
  59 0012 5070     	 strb r0,[r2,#1]
 151:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 2] = Key[(i * 4) + 2];
  60              	 .loc 1 151 5 is_stmt 1 discriminator 3 view .LVU13
  61              	 .loc 1 151 32 is_stmt 0 discriminator 3 view .LVU14
  62 0014 9878     	 ldrb r0,[r3,#2]
  63              	 .loc 1 151 27 discriminator 3 view .LVU15
  64 0016 9070     	 strb r0,[r2,#2]
 152:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[(i * 4) + 3] = Key[(i * 4) + 3];
  65              	 .loc 1 152 5 is_stmt 1 discriminator 3 view .LVU16
  66              	 .loc 1 152 32 is_stmt 0 discriminator 3 view .LVU17
  67 0018 D878     	 ldrb r0,[r3,#3]
  68              	 .loc 1 152 27 discriminator 3 view .LVU18
  69 001a D070     	 strb r0,[r2,#3]
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  70              	 .loc 1 147 22 is_stmt 1 discriminator 3 view .LVU19
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  71              	 .loc 1 147 14 discriminator 3 view .LVU20
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  72              	 .loc 1 147 3 is_stmt 0 discriminator 3 view .LVU21
  73 001c 0433     	 adds r3,r3,#4
  74 001e 8B42     	 cmp r3,r1
  75 0020 02F10402 	 add r2,r2,#4
  76 0024 F2D1     	 bne .L2
  77 0026 204B     	 ldr r3,.L9+8
  78              	.LBB14:
  79              	.LBB15:
 132:.././crypto/tiny-AES128-C/aes.c **** }
  80              	 .loc 1 132 14 view .LVU22
  81 0028 2048     	 ldr r0,.L9+12
  82              	.LBE15:
  83              	.LBE14:
 153:.././crypto/tiny-AES128-C/aes.c ****   }
 154:.././crypto/tiny-AES128-C/aes.c **** 
 155:.././crypto/tiny-AES128-C/aes.c ****   // All other round keys are found from the previous round keys.
 156:.././crypto/tiny-AES128-C/aes.c ****   for(; (i < (Nb * (Nr + 1))); ++i)
 157:.././crypto/tiny-AES128-C/aes.c ****   {
 158:.././crypto/tiny-AES128-C/aes.c ****     for(j = 0; j < 4; ++j)
 159:.././crypto/tiny-AES128-C/aes.c ****     {
 160:.././crypto/tiny-AES128-C/aes.c ****       tempa[j]=RoundKey[(i-1) * 4 + j];
 161:.././crypto/tiny-AES128-C/aes.c ****     }
 162:.././crypto/tiny-AES128-C/aes.c ****     if (i % Nk == 0)
 163:.././crypto/tiny-AES128-C/aes.c ****     {
 164:.././crypto/tiny-AES128-C/aes.c ****       // This function rotates the 4 bytes in a word to the left once.
 165:.././crypto/tiny-AES128-C/aes.c ****       // [a0,a1,a2,a3] becomes [a1,a2,a3,a0]
 166:.././crypto/tiny-AES128-C/aes.c **** 
 167:.././crypto/tiny-AES128-C/aes.c ****       // Function RotWord()
 168:.././crypto/tiny-AES128-C/aes.c ****       {
 169:.././crypto/tiny-AES128-C/aes.c ****         k = tempa[0];
 170:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
 171:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = tempa[2];
 172:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = tempa[3];
 173:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = k;
 174:.././crypto/tiny-AES128-C/aes.c ****       }
 175:.././crypto/tiny-AES128-C/aes.c **** 
 176:.././crypto/tiny-AES128-C/aes.c ****       // SubWord() is a function that takes a four-byte input word and 
 177:.././crypto/tiny-AES128-C/aes.c ****       // applies the S-box to each of the four bytes to produce an output word.
 178:.././crypto/tiny-AES128-C/aes.c **** 
 179:.././crypto/tiny-AES128-C/aes.c ****       // Function Subword()
 180:.././crypto/tiny-AES128-C/aes.c ****       {
 181:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 182:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 184:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 185:.././crypto/tiny-AES128-C/aes.c ****       }
 186:.././crypto/tiny-AES128-C/aes.c **** 
 187:.././crypto/tiny-AES128-C/aes.c ****       tempa[0] =  tempa[0] ^ Rcon[i/Nk];
  84              	 .loc 1 187 34 view .LVU23
  85 002a 214C     	 ldr r4,.L9+16
 147:.././crypto/tiny-AES128-C/aes.c ****   {
  86              	 .loc 1 147 3 view .LVU24
  87 002c 0421     	 movs r1,#4
  88              	.L3:
  89              	.LVL2:
 158:.././crypto/tiny-AES128-C/aes.c ****     {
  90              	 .loc 1 158 16 is_stmt 1 view .LVU25
  91 002e 1A68     	 ldr r2,[r3]
 160:.././crypto/tiny-AES128-C/aes.c ****     }
  92              	 .loc 1 160 15 is_stmt 0 view .LVU26
  93 0030 0192     	 str r2,[sp,#4]
  94              	.LVL3:
 162:.././crypto/tiny-AES128-C/aes.c ****     {
  95              	 .loc 1 162 5 is_stmt 1 view .LVU27
 162:.././crypto/tiny-AES128-C/aes.c ****     {
  96              	 .loc 1 162 8 is_stmt 0 view .LVU28
  97 0032 8D07     	 lsls r5,r1,#30
  98 0034 14D1     	 bne .L6
 169:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = tempa[1];
  99              	 .loc 1 169 9 is_stmt 1 view .LVU29
 100              	.LVL4:
 170:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = tempa[2];
 101              	 .loc 1 170 9 view .LVU30
 171:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = tempa[3];
 102              	 .loc 1 171 9 view .LVU31
 172:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = k;
 103              	 .loc 1 172 9 view .LVU32
 173:.././crypto/tiny-AES128-C/aes.c ****       }
 104              	 .loc 1 173 9 view .LVU33
 181:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 105              	 .loc 1 181 9 view .LVU34
 106              	.LBB19:
 107              	.LBI14:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 108              	 .loc 1 130 16 view .LVU35
 109              	.LBB16:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 110              	 .loc 1 132 3 view .LVU36
 111              	.LBE16:
 112              	.LBE19:
 113              	.LBB20:
 114              	.LBB21:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 115              	 .loc 1 132 14 is_stmt 0 view .LVU37
 116 0036 C2F30746 	 ubfx r6,r2,#16,#8
 117              	.LBE21:
 118              	.LBE20:
 119              	.LBB23:
 120              	.LBB17:
 121 003a C2F30725 	 ubfx r5,r2,#8,#8
 122              	.LBE17:
 123              	.LBE23:
 182:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 124              	 .loc 1 182 18 view .LVU38
 125 003e 865D     	 ldrb r6,[r0,r6]
 126 0040 8DF80560 	 strb r6,[sp,#5]
 127              	.LVL5:
 128              	.LBB24:
 129              	.LBB25:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 130              	 .loc 1 132 14 view .LVU39
 131 0044 160E     	 lsrs r6,r2,#24
 132              	.LBE25:
 133              	.LBE24:
 134              	.LBB27:
 135              	.LBB28:
 136 0046 D2B2     	 uxtb r2,r2
 137              	.LBE28:
 138              	.LBE27:
 139              	.LBB30:
 140              	.LBB18:
 141 0048 455D     	 ldrb r5,[r0,r5]
 132:.././crypto/tiny-AES128-C/aes.c **** }
 142              	 .loc 1 132 14 view .LVU40
 143              	.LBE18:
 144              	.LBE30:
 182:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 145              	 .loc 1 182 9 is_stmt 1 view .LVU41
 146              	.LVL6:
 147              	.LBB31:
 148              	.LBI20:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 149              	 .loc 1 130 16 view .LVU42
 150              	.LBB22:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 151              	 .loc 1 132 3 view .LVU43
 132:.././crypto/tiny-AES128-C/aes.c **** }
 152              	 .loc 1 132 3 is_stmt 0 view .LVU44
 153              	.LBE22:
 154              	.LBE31:
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 155              	 .loc 1 183 9 is_stmt 1 view .LVU45
 156              	.LBB32:
 157              	.LBI24:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 158              	 .loc 1 130 16 view .LVU46
 159              	.LBB26:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 160              	 .loc 1 132 3 view .LVU47
 132:.././crypto/tiny-AES128-C/aes.c **** }
 161              	 .loc 1 132 3 is_stmt 0 view .LVU48
 162              	.LBE26:
 163              	.LBE32:
 184:.././crypto/tiny-AES128-C/aes.c ****       }
 164              	 .loc 1 184 18 view .LVU49
 165 004a 825C     	 ldrb r2,[r0,r2]
 166 004c 8DF80720 	 strb r2,[sp,#7]
 167              	 .loc 1 187 36 view .LVU50
 168 0050 8A08     	 lsrs r2,r1,#2
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 169              	 .loc 1 183 18 view .LVU51
 170 0052 865D     	 ldrb r6,[r0,r6]
 171              	 .loc 1 187 16 view .LVU52
 172 0054 A25C     	 ldrb r2,[r4,r2]
 183:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 173              	 .loc 1 183 18 view .LVU53
 174 0056 8DF80660 	 strb r6,[sp,#6]
 184:.././crypto/tiny-AES128-C/aes.c ****       }
 175              	 .loc 1 184 9 is_stmt 1 view .LVU54
 176              	.LVL7:
 177              	.LBB33:
 178              	.LBI27:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 179              	 .loc 1 130 16 view .LVU55
 180              	.LBB29:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 181              	 .loc 1 132 3 view .LVU56
 132:.././crypto/tiny-AES128-C/aes.c **** }
 182              	 .loc 1 132 3 is_stmt 0 view .LVU57
 183              	.LBE29:
 184              	.LBE33:
 185              	 .loc 1 187 7 is_stmt 1 view .LVU58
 186              	 .loc 1 187 16 is_stmt 0 view .LVU59
 187 005a 6A40     	 eors r2,r2,r5
 188 005c 8DF80420 	 strb r2,[sp,#4]
 189              	.LVL8:
 190              	.L6:
 188:.././crypto/tiny-AES128-C/aes.c ****     }
 189:.././crypto/tiny-AES128-C/aes.c ****     else if (Nk > 6 && i % Nk == 4)
 190:.././crypto/tiny-AES128-C/aes.c ****     {
 191:.././crypto/tiny-AES128-C/aes.c ****       // Function Subword()
 192:.././crypto/tiny-AES128-C/aes.c ****       {
 193:.././crypto/tiny-AES128-C/aes.c ****         tempa[0] = getSBoxValue(tempa[0]);
 194:.././crypto/tiny-AES128-C/aes.c ****         tempa[1] = getSBoxValue(tempa[1]);
 195:.././crypto/tiny-AES128-C/aes.c ****         tempa[2] = getSBoxValue(tempa[2]);
 196:.././crypto/tiny-AES128-C/aes.c ****         tempa[3] = getSBoxValue(tempa[3]);
 197:.././crypto/tiny-AES128-C/aes.c ****       }
 198:.././crypto/tiny-AES128-C/aes.c ****     }
 199:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 0] = RoundKey[(i - Nk) * 4 + 0] ^ tempa[0];
 191              	 .loc 1 199 5 is_stmt 1 view .LVU60
 192              	 .loc 1 199 25 is_stmt 0 view .LVU61
 193 0060 13F80C2C 	 ldrb r2,[r3,#-12]
 194 0064 9DF80450 	 ldrb r5,[sp,#4]
 195 0068 6A40     	 eors r2,r2,r5
 196 006a 1A71     	 strb r2,[r3,#4]
 200:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 1] = RoundKey[(i - Nk) * 4 + 1] ^ tempa[1];
 197              	 .loc 1 200 5 is_stmt 1 view .LVU62
 198              	 .loc 1 200 25 is_stmt 0 view .LVU63
 199 006c 9DF80550 	 ldrb r5,[sp,#5]
 200 0070 13F80B2C 	 ldrb r2,[r3,#-11]
 201 0074 6A40     	 eors r2,r2,r5
 202 0076 5A71     	 strb r2,[r3,#5]
 201:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 2] = RoundKey[(i - Nk) * 4 + 2] ^ tempa[2];
 203              	 .loc 1 201 5 is_stmt 1 view .LVU64
 204              	 .loc 1 201 25 is_stmt 0 view .LVU65
 205 0078 9DF80650 	 ldrb r5,[sp,#6]
 206 007c 13F80A2C 	 ldrb r2,[r3,#-10]
 207 0080 6A40     	 eors r2,r2,r5
 208 0082 9A71     	 strb r2,[r3,#6]
 202:.././crypto/tiny-AES128-C/aes.c ****     RoundKey[i * 4 + 3] = RoundKey[(i - Nk) * 4 + 3] ^ tempa[3];
 209              	 .loc 1 202 5 is_stmt 1 view .LVU66
 210              	 .loc 1 202 25 is_stmt 0 view .LVU67
 211 0084 9DF80750 	 ldrb r5,[sp,#7]
 212 0088 13F8092C 	 ldrb r2,[r3,#-9]
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 213              	 .loc 1 156 32 view .LVU68
 214 008c 0131     	 adds r1,r1,#1
 215              	.LVL9:
 216              	 .loc 1 202 25 view .LVU69
 217 008e 6A40     	 eors r2,r2,r5
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 218              	 .loc 1 156 3 view .LVU70
 219 0090 2C29     	 cmp r1,#44
 220              	 .loc 1 202 25 view .LVU71
 221 0092 DA71     	 strb r2,[r3,#7]
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 222              	 .loc 1 156 32 is_stmt 1 view .LVU72
 223              	.LVL10:
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 224              	 .loc 1 156 9 view .LVU73
 156:.././crypto/tiny-AES128-C/aes.c ****   {
 225              	 .loc 1 156 3 is_stmt 0 view .LVU74
 226 0094 03F10403 	 add r3,r3,#4
 227 0098 C9D1     	 bne .L3
 203:.././crypto/tiny-AES128-C/aes.c ****   }
 204:.././crypto/tiny-AES128-C/aes.c **** }
 228              	 .loc 1 204 1 view .LVU75
 229 009a 02B0     	 add sp,sp,#8
 230              	.LCFI1:
 231              	 .cfi_def_cfa_offset 16
 232              	 
 233 009c 70BD     	 pop {r4,r5,r6,pc}
 234              	.L10:
 235 009e 00BF     	 .align 2
 236              	.L9:
 237 00a0 00000000 	 .word .LANCHOR0
 238 00a4 00000000 	 .word .LANCHOR1
 239 00a8 0C000000 	 .word .LANCHOR1+12
 240 00ac 00000000 	 .word .LANCHOR2
 241 00b0 00000000 	 .word .LANCHOR3
 242              	 .cfi_endproc
 243              	.LFE2:
 245              	 .section .text.AddRoundKey,"ax",%progbits
 246              	 .align 1
 247              	 .syntax unified
 248              	 .thumb
 249              	 .thumb_func
 250              	 .fpu softvfp
 252              	AddRoundKey:
 253              	.LVL11:
 254              	.LFB3:
 205:.././crypto/tiny-AES128-C/aes.c **** 
 206:.././crypto/tiny-AES128-C/aes.c **** // This function adds the round key to state.
 207:.././crypto/tiny-AES128-C/aes.c **** // The round key is added to the state by an XOR function.
 208:.././crypto/tiny-AES128-C/aes.c **** static void AddRoundKey(uint8_t round)
 209:.././crypto/tiny-AES128-C/aes.c **** {
 255              	 .loc 1 209 1 is_stmt 1 view-0
 256              	 .cfi_startproc
 257              	 
 258              	 
 210:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 259              	 .loc 1 210 3 view .LVU77
 211:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 260              	 .loc 1 211 3 view .LVU78
 261              	 .loc 1 211 11 view .LVU79
 209:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 262              	 .loc 1 209 1 is_stmt 0 view .LVU80
 263 0000 F0B5     	 push {r4,r5,r6,r7,lr}
 264              	.LCFI2:
 265              	 .cfi_def_cfa_offset 20
 266              	 .cfi_offset 4,-20
 267              	 .cfi_offset 5,-16
 268              	 .cfi_offset 6,-12
 269              	 .cfi_offset 7,-8
 270              	 .cfi_offset 14,-4
 212:.././crypto/tiny-AES128-C/aes.c ****   {
 213:.././crypto/tiny-AES128-C/aes.c ****     for(j = 0; j < 4; ++j)
 214:.././crypto/tiny-AES128-C/aes.c ****     {
 215:.././crypto/tiny-AES128-C/aes.c ****       (*state)[i][j] ^= RoundKey[round * Nb * 4 + i * Nb + j];
 271              	 .loc 1 215 22 view .LVU81
 272 0002 0B4B     	 ldr r3,.L16
 273 0004 0B4E     	 ldr r6,.L16+4
 274 0006 1968     	 ldr r1,[r3]
 275 0008 0001     	 lsls r0,r0,#4
 276              	.LVL12:
 277              	 .loc 1 215 22 view .LVU82
 278 000a 0A1D     	 adds r2,r1,#4
 279 000c 1431     	 adds r1,r1,#20
 280              	.LVL13:
 281              	.L12:
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 282              	 .loc 1 213 16 is_stmt 1 view .LVU83
 283 000e 131F     	 subs r3,r2,#4
 284 0010 3518     	 adds r5,r6,r0
 285              	.LVL14:
 286              	.L13:
 287              	 .loc 1 215 7 discriminator 3 view .LVU84
 288              	 .loc 1 215 22 is_stmt 0 discriminator 3 view .LVU85
 289 0012 1C78     	 ldrb r4,[r3]
 290              	 .loc 1 215 33 discriminator 3 view .LVU86
 291 0014 15F8017B 	 ldrb r7,[r5],#1
 292              	 .loc 1 215 22 discriminator 3 view .LVU87
 293 0018 7C40     	 eors r4,r4,r7
 294 001a 03F8014B 	 strb r4,[r3],#1
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 295              	 .loc 1 213 23 is_stmt 1 discriminator 3 view .LVU88
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 296              	 .loc 1 213 16 discriminator 3 view .LVU89
 213:.././crypto/tiny-AES128-C/aes.c ****     {
 297              	 .loc 1 213 5 is_stmt 0 discriminator 3 view .LVU90
 298 001e 9342     	 cmp r3,r2
 299 0020 F7D1     	 bne .L13
 211:.././crypto/tiny-AES128-C/aes.c ****   {
 300              	 .loc 1 211 15 is_stmt 1 discriminator 2 view .LVU91
 301              	.LVL15:
 211:.././crypto/tiny-AES128-C/aes.c ****   {
 302              	 .loc 1 211 11 discriminator 2 view .LVU92
 211:.././crypto/tiny-AES128-C/aes.c ****   {
 303              	 .loc 1 211 3 is_stmt 0 discriminator 2 view .LVU93
 304 0022 1A1D     	 adds r2,r3,#4
 305 0024 8A42     	 cmp r2,r1
 306 0026 00F10400 	 add r0,r0,#4
 307 002a F0D1     	 bne .L12
 216:.././crypto/tiny-AES128-C/aes.c ****     }
 217:.././crypto/tiny-AES128-C/aes.c ****   }
 218:.././crypto/tiny-AES128-C/aes.c **** }
 308              	 .loc 1 218 1 view .LVU94
 309 002c F0BD     	 pop {r4,r5,r6,r7,pc}
 310              	.L17:
 311 002e 00BF     	 .align 2
 312              	.L16:
 313 0030 00000000 	 .word .LANCHOR4
 314 0034 00000000 	 .word .LANCHOR1
 315              	 .cfi_endproc
 316              	.LFE3:
 318              	 .section .text.SubBytes,"ax",%progbits
 319              	 .align 1
 320              	 .syntax unified
 321              	 .thumb
 322              	 .thumb_func
 323              	 .fpu softvfp
 325              	SubBytes:
 326              	.LFB4:
 219:.././crypto/tiny-AES128-C/aes.c **** 
 220:.././crypto/tiny-AES128-C/aes.c **** // The SubBytes Function Substitutes the values in the
 221:.././crypto/tiny-AES128-C/aes.c **** // state matrix with values in an S-box.
 222:.././crypto/tiny-AES128-C/aes.c **** static void SubBytes(void)
 223:.././crypto/tiny-AES128-C/aes.c **** {
 327              	 .loc 1 223 1 is_stmt 1 view-0
 328              	 .cfi_startproc
 329              	 
 330              	 
 224:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i, j;
 331              	 .loc 1 224 3 view .LVU96
 225:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < 4; ++i)
 332              	 .loc 1 225 3 view .LVU97
 333              	.LVL16:
 334              	 .loc 1 225 14 view .LVU98
 223:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i, j;
 335              	 .loc 1 223 1 is_stmt 0 view .LVU99
 336 0000 10B5     	 push {r4,lr}
 337              	.LCFI3:
 338              	 .cfi_def_cfa_offset 8
 339              	 .cfi_offset 4,-8
 340              	 .cfi_offset 14,-4
 226:.././crypto/tiny-AES128-C/aes.c ****   {
 227:.././crypto/tiny-AES128-C/aes.c ****     for(j = 0; j < 4; ++j)
 228:.././crypto/tiny-AES128-C/aes.c ****     {
 229:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 230:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i+j] & 0x01) {
 231:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 1;
 232:.././crypto/tiny-AES128-C/aes.c ****         i+=1;
 233:.././crypto/tiny-AES128-C/aes.c ****       }
 234:.././crypto/tiny-AES128-C/aes.c ****       #endif
 235:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 236:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i+j] & 0x02) {
 237:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 1;
 238:.././crypto/tiny-AES128-C/aes.c ****         i+=1;
 239:.././crypto/tiny-AES128-C/aes.c ****       }
 240:.././crypto/tiny-AES128-C/aes.c ****       #endif
 241:.././crypto/tiny-AES128-C/aes.c ****       (*state)[j][i] = getSBoxValue((*state)[j][i]);
 341              	 .loc 1 241 38 view .LVU100
 342 0002 084B     	 ldr r3,.L23
 343              	.LBB34:
 344              	.LBB35:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 345              	 .loc 1 132 14 view .LVU101
 346 0004 0848     	 ldr r0,.L23+4
 347 0006 1B68     	 ldr r3,[r3]
 348 0008 191D     	 adds r1,r3,#4
 349              	.LVL17:
 350              	.L19:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 351              	 .loc 1 132 14 view .LVU102
 352              	.LBE35:
 353              	.LBE34:
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 354              	 .loc 1 227 16 is_stmt 1 view .LVU103
 223:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i, j;
 355              	 .loc 1 223 1 is_stmt 0 view .LVU104
 356 000a 0022     	 movs r2,#0
 357              	.LVL18:
 358              	.L20:
 359              	 .loc 1 241 7 is_stmt 1 discriminator 3 view .LVU105
 360              	.LBB37:
 361              	.LBI34:
 130:.././crypto/tiny-AES128-C/aes.c **** {
 362              	 .loc 1 130 16 discriminator 3 view .LVU106
 363              	.LBB36:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 364              	 .loc 1 132 3 discriminator 3 view .LVU107
 132:.././crypto/tiny-AES128-C/aes.c **** }
 365              	 .loc 1 132 14 is_stmt 0 discriminator 3 view .LVU108
 366 000c 13F82240 	 ldrb r4,[r3,r2,lsl#2]
 367 0010 045D     	 ldrb r4,[r0,r4]
 368              	.LVL19:
 132:.././crypto/tiny-AES128-C/aes.c **** }
 369              	 .loc 1 132 14 discriminator 3 view .LVU109
 370              	.LBE36:
 371              	.LBE37:
 372              	 .loc 1 241 22 discriminator 3 view .LVU110
 373 0012 03F82240 	 strb r4,[r3,r2,lsl#2]
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 374              	 .loc 1 227 23 is_stmt 1 discriminator 3 view .LVU111
 375              	.LVL20:
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 376              	 .loc 1 227 16 discriminator 3 view .LVU112
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 377              	 .loc 1 227 5 is_stmt 0 discriminator 3 view .LVU113
 378 0016 0132     	 adds r2,r2,#1
 379              	.LVL21:
 227:.././crypto/tiny-AES128-C/aes.c ****     {
 380              	 .loc 1 227 5 discriminator 3 view .LVU114
 381 0018 042A     	 cmp r2,#4
 382 001a F7D1     	 bne .L20
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 383              	 .loc 1 225 21 is_stmt 1 discriminator 2 view .LVU115
 384              	.LVL22:
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 385              	 .loc 1 225 14 discriminator 2 view .LVU116
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 386              	 .loc 1 225 3 is_stmt 0 discriminator 2 view .LVU117
 387 001c 0133     	 adds r3,r3,#1
 388              	.LVL23:
 225:.././crypto/tiny-AES128-C/aes.c ****   {
 389              	 .loc 1 225 3 discriminator 2 view .LVU118
 390 001e 8B42     	 cmp r3,r1
 391 0020 F3D1     	 bne .L19
 242:.././crypto/tiny-AES128-C/aes.c ****     }
 243:.././crypto/tiny-AES128-C/aes.c ****   }
 244:.././crypto/tiny-AES128-C/aes.c **** }
 392              	 .loc 1 244 1 view .LVU119
 393 0022 10BD     	 pop {r4,pc}
 394              	.L24:
 395              	 .align 2
 396              	.L23:
 397 0024 00000000 	 .word .LANCHOR4
 398 0028 00000000 	 .word .LANCHOR2
 399              	 .cfi_endproc
 400              	.LFE4:
 402              	 .section .text.ShiftRows,"ax",%progbits
 403              	 .align 1
 404              	 .syntax unified
 405              	 .thumb
 406              	 .thumb_func
 407              	 .fpu softvfp
 409              	ShiftRows:
 410              	.LFB5:
 245:.././crypto/tiny-AES128-C/aes.c **** 
 246:.././crypto/tiny-AES128-C/aes.c **** // The ShiftRows() function shifts the rows in the state to the left.
 247:.././crypto/tiny-AES128-C/aes.c **** // Each row is shifted with different offset.
 248:.././crypto/tiny-AES128-C/aes.c **** // Offset = Row number. So the first row is not shifted.
 249:.././crypto/tiny-AES128-C/aes.c **** static void ShiftRows(void)
 250:.././crypto/tiny-AES128-C/aes.c **** {
 411              	 .loc 1 250 1 is_stmt 1 view-0
 412              	 .cfi_startproc
 413              	 
 414              	 
 415              	 
 251:.././crypto/tiny-AES128-C/aes.c ****   uint8_t temp;
 416              	 .loc 1 251 3 view .LVU121
 252:.././crypto/tiny-AES128-C/aes.c **** 
 253:.././crypto/tiny-AES128-C/aes.c ****   // Rotate first row 1 columns to left  
 254:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 255:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[1] & 0x01) {
 256:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 257:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 258:.././crypto/tiny-AES128-C/aes.c ****       }
 259:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[2] & 0x02) {
 260:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 261:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 262:.././crypto/tiny-AES128-C/aes.c ****       }
 263:.././crypto/tiny-AES128-C/aes.c ****       #endif
 264:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 265:.././crypto/tiny-AES128-C/aes.c ****   #endif
 266:.././crypto/tiny-AES128-C/aes.c ****   temp           = (*state)[0][1];
 417              	 .loc 1 266 3 view .LVU122
 418              	 .loc 1 266 21 is_stmt 0 view .LVU123
 419 0000 0D4B     	 ldr r3,.L26
 420 0002 1B68     	 ldr r3,[r3]
 267:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 421              	 .loc 1 267 18 view .LVU124
 422 0004 5979     	 ldrb r1,[r3,#5]
 266:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1] = (*state)[1][1];
 423              	 .loc 1 266 18 view .LVU125
 424 0006 5A78     	 ldrb r2,[r3,#1]
 425              	.LVL24:
 426              	 .loc 1 267 3 is_stmt 1 view .LVU126
 427              	 .loc 1 267 18 is_stmt 0 view .LVU127
 428 0008 5970     	 strb r1,[r3,#1]
 268:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][1] = (*state)[2][1];
 429              	 .loc 1 268 3 is_stmt 1 view .LVU128
 430              	 .loc 1 268 18 is_stmt 0 view .LVU129
 431 000a 597A     	 ldrb r1,[r3,#9]
 432 000c 5971     	 strb r1,[r3,#5]
 269:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][1] = (*state)[3][1];
 433              	 .loc 1 269 3 is_stmt 1 view .LVU130
 434              	 .loc 1 269 18 is_stmt 0 view .LVU131
 435 000e 597B     	 ldrb r1,[r3,#13]
 436 0010 5972     	 strb r1,[r3,#9]
 270:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 437              	 .loc 1 270 3 is_stmt 1 view .LVU132
 271:.././crypto/tiny-AES128-C/aes.c **** 
 272:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 273:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 274:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4] & 0x01) {
 275:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 276:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 277:.././crypto/tiny-AES128-C/aes.c ****       }
 278:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[10] & 0x02) {
 279:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 280:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 281:.././crypto/tiny-AES128-C/aes.c ****       }
 282:.././crypto/tiny-AES128-C/aes.c ****       #endif
 283:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 284:.././crypto/tiny-AES128-C/aes.c ****   #endif
 285:.././crypto/tiny-AES128-C/aes.c ****   temp           = (*state)[0][2];
 286:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 438              	 .loc 1 286 18 is_stmt 0 view .LVU133
 439 0012 997A     	 ldrb r1,[r3,#10]
 270:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1] = temp;
 440              	 .loc 1 270 18 view .LVU134
 441 0014 5A73     	 strb r2,[r3,#13]
 285:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 442              	 .loc 1 285 3 is_stmt 1 view .LVU135
 285:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2] = (*state)[2][2];
 443              	 .loc 1 285 18 is_stmt 0 view .LVU136
 444 0016 9A78     	 ldrb r2,[r3,#2]
 445              	.LVL25:
 446              	 .loc 1 286 3 is_stmt 1 view .LVU137
 447              	 .loc 1 286 18 is_stmt 0 view .LVU138
 448 0018 9970     	 strb r1,[r3,#2]
 287:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 449              	 .loc 1 287 3 is_stmt 1 view .LVU139
 288:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 289:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 290:.././crypto/tiny-AES128-C/aes.c ****   #endif
 291:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 292:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[5] & 0x01) {
 293:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 294:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 295:.././crypto/tiny-AES128-C/aes.c ****       }
 296:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[8] & 0x02) {
 297:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 298:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 299:.././crypto/tiny-AES128-C/aes.c ****       }
 300:.././crypto/tiny-AES128-C/aes.c ****       #endif
 301:.././crypto/tiny-AES128-C/aes.c **** 
 302:.././crypto/tiny-AES128-C/aes.c ****   temp       = (*state)[1][2];
 303:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 450              	 .loc 1 303 18 is_stmt 0 view .LVU140
 451 001a 997B     	 ldrb r1,[r3,#14]
 287:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2] = temp;
 452              	 .loc 1 287 18 view .LVU141
 453 001c 9A72     	 strb r2,[r3,#10]
 302:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 454              	 .loc 1 302 3 is_stmt 1 view .LVU142
 302:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2] = (*state)[3][2];
 455              	 .loc 1 302 14 is_stmt 0 view .LVU143
 456 001e 9A79     	 ldrb r2,[r3,#6]
 457              	.LVL26:
 458              	 .loc 1 303 3 is_stmt 1 view .LVU144
 459              	 .loc 1 303 18 is_stmt 0 view .LVU145
 460 0020 9971     	 strb r1,[r3,#6]
 304:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 461              	 .loc 1 304 3 is_stmt 1 view .LVU146
 305:.././crypto/tiny-AES128-C/aes.c **** 
 306:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to left  
 307:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 308:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[0] & 0x01) {
 309:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 310:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 311:.././crypto/tiny-AES128-C/aes.c ****       }
 312:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[3] & 0x02) {
 313:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 314:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 315:.././crypto/tiny-AES128-C/aes.c ****       }
 316:.././crypto/tiny-AES128-C/aes.c ****       #endif
 317:.././crypto/tiny-AES128-C/aes.c ****   #ifdef JITTER_2
 318:.././crypto/tiny-AES128-C/aes.c ****   #endif
 319:.././crypto/tiny-AES128-C/aes.c ****   // Rotate third row 3 columns to left
 320:.././crypto/tiny-AES128-C/aes.c ****   temp       = (*state)[0][3];
 321:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 462              	 .loc 1 321 18 is_stmt 0 view .LVU147
 463 0022 D97B     	 ldrb r1,[r3,#15]
 304:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2] = temp;
 464              	 .loc 1 304 18 view .LVU148
 465 0024 9A73     	 strb r2,[r3,#14]
 320:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 466              	 .loc 1 320 3 is_stmt 1 view .LVU149
 320:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3] = (*state)[3][3];
 467              	 .loc 1 320 14 is_stmt 0 view .LVU150
 468 0026 DA78     	 ldrb r2,[r3,#3]
 469              	.LVL27:
 470              	 .loc 1 321 3 is_stmt 1 view .LVU151
 471              	 .loc 1 321 18 is_stmt 0 view .LVU152
 472 0028 D970     	 strb r1,[r3,#3]
 322:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3] = (*state)[2][3];
 473              	 .loc 1 322 3 is_stmt 1 view .LVU153
 474              	 .loc 1 322 18 is_stmt 0 view .LVU154
 475 002a D97A     	 ldrb r1,[r3,#11]
 476 002c D973     	 strb r1,[r3,#15]
 323:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3] = (*state)[1][3];
 477              	 .loc 1 323 3 is_stmt 1 view .LVU155
 478              	 .loc 1 323 18 is_stmt 0 view .LVU156
 479 002e D979     	 ldrb r1,[r3,#7]
 480 0030 D972     	 strb r1,[r3,#11]
 324:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3] = temp;
 481              	 .loc 1 324 3 is_stmt 1 view .LVU157
 482              	 .loc 1 324 18 is_stmt 0 view .LVU158
 483 0032 DA71     	 strb r2,[r3,#7]
 325:.././crypto/tiny-AES128-C/aes.c **** }
 484              	 .loc 1 325 1 view .LVU159
 485 0034 7047     	 bx lr
 486              	.L27:
 487 0036 00BF     	 .align 2
 488              	.L26:
 489 0038 00000000 	 .word .LANCHOR4
 490              	 .cfi_endproc
 491              	.LFE5:
 493              	 .section .text.xtime,"ax",%progbits
 494              	 .align 1
 495              	 .syntax unified
 496              	 .thumb
 497              	 .thumb_func
 498              	 .fpu softvfp
 500              	xtime:
 501              	.LVL28:
 502              	.LFB6:
 326:.././crypto/tiny-AES128-C/aes.c **** 
 327:.././crypto/tiny-AES128-C/aes.c **** static uint8_t xtime(uint8_t x)
 328:.././crypto/tiny-AES128-C/aes.c **** {
 503              	 .loc 1 328 1 is_stmt 1 view-0
 504              	 .cfi_startproc
 505              	 
 506              	 
 507              	 
 329:.././crypto/tiny-AES128-C/aes.c ****   return ((x<<1) ^ (((x>>7) & 1) * 0x1b));
 508              	 .loc 1 329 3 view .LVU161
 509              	 .loc 1 329 18 is_stmt 0 view .LVU162
 510 0000 C309     	 lsrs r3,r0,#7
 511 0002 03EB4303 	 add r3,r3,r3,lsl#1
 512 0006 03EBC303 	 add r3,r3,r3,lsl#3
 513 000a 83EA4000 	 eor r0,r3,r0,lsl#1
 514              	.LVL29:
 330:.././crypto/tiny-AES128-C/aes.c **** }
 515              	 .loc 1 330 1 view .LVU163
 516 000e C0B2     	 uxtb r0,r0
 517 0010 7047     	 bx lr
 518              	 .cfi_endproc
 519              	.LFE6:
 521              	 .section .text.InvSubBytes,"ax",%progbits
 522              	 .align 1
 523              	 .syntax unified
 524              	 .thumb
 525              	 .thumb_func
 526              	 .fpu softvfp
 528              	InvSubBytes:
 529              	.LFB9:
 331:.././crypto/tiny-AES128-C/aes.c **** 
 332:.././crypto/tiny-AES128-C/aes.c **** // MixColumns function mixes the columns of the state matrix
 333:.././crypto/tiny-AES128-C/aes.c **** static void MixColumns(void)
 334:.././crypto/tiny-AES128-C/aes.c **** {
 335:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i;
 336:.././crypto/tiny-AES128-C/aes.c ****   uint8_t Tmp,Tm,t;
 337:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < 4; ++i)
 338:.././crypto/tiny-AES128-C/aes.c ****   {  
 339:.././crypto/tiny-AES128-C/aes.c ****       #ifdef JITTER_2
 340:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i] & 0x01) {
 341:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 342:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 343:.././crypto/tiny-AES128-C/aes.c ****       }
 344:.././crypto/tiny-AES128-C/aes.c ****       if (input_save[4*i] & 0x02) {
 345:.././crypto/tiny-AES128-C/aes.c ****         volatile int i = 0;
 346:.././crypto/tiny-AES128-C/aes.c ****         i += 1;
 347:.././crypto/tiny-AES128-C/aes.c ****       }
 348:.././crypto/tiny-AES128-C/aes.c ****       #endif
 349:.././crypto/tiny-AES128-C/aes.c ****     t   = (*state)[i][0];
 350:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 354:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 355:.././crypto/tiny-AES128-C/aes.c ****   }
 356:.././crypto/tiny-AES128-C/aes.c **** }
 357:.././crypto/tiny-AES128-C/aes.c **** 
 358:.././crypto/tiny-AES128-C/aes.c **** // Multiply is used to multiply numbers in the field GF(2^8)
 359:.././crypto/tiny-AES128-C/aes.c **** #if MULTIPLY_AS_A_FUNCTION
 360:.././crypto/tiny-AES128-C/aes.c **** static uint8_t Multiply(uint8_t x, uint8_t y)
 361:.././crypto/tiny-AES128-C/aes.c **** {
 362:.././crypto/tiny-AES128-C/aes.c ****   return (((y & 1) * x) ^
 363:.././crypto/tiny-AES128-C/aes.c ****        ((y>>1 & 1) * xtime(x)) ^
 364:.././crypto/tiny-AES128-C/aes.c ****        ((y>>2 & 1) * xtime(xtime(x))) ^
 365:.././crypto/tiny-AES128-C/aes.c ****        ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^
 366:.././crypto/tiny-AES128-C/aes.c ****        ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))));
 367:.././crypto/tiny-AES128-C/aes.c ****   }
 368:.././crypto/tiny-AES128-C/aes.c **** #else
 369:.././crypto/tiny-AES128-C/aes.c **** #define Multiply(x, y)                                \
 370:.././crypto/tiny-AES128-C/aes.c ****       (  ((y & 1) * x) ^                              \
 371:.././crypto/tiny-AES128-C/aes.c ****       ((y>>1 & 1) * xtime(x)) ^                       \
 372:.././crypto/tiny-AES128-C/aes.c ****       ((y>>2 & 1) * xtime(xtime(x))) ^                \
 373:.././crypto/tiny-AES128-C/aes.c ****       ((y>>3 & 1) * xtime(xtime(xtime(x)))) ^         \
 374:.././crypto/tiny-AES128-C/aes.c ****       ((y>>4 & 1) * xtime(xtime(xtime(xtime(x))))))   \
 375:.././crypto/tiny-AES128-C/aes.c **** 
 376:.././crypto/tiny-AES128-C/aes.c **** #endif
 377:.././crypto/tiny-AES128-C/aes.c **** 
 378:.././crypto/tiny-AES128-C/aes.c **** // MixColumns function mixes the columns of the state matrix.
 379:.././crypto/tiny-AES128-C/aes.c **** // The method used to multiply may be difficult to understand for the inexperienced.
 380:.././crypto/tiny-AES128-C/aes.c **** // Please use the references to gain more information.
 381:.././crypto/tiny-AES128-C/aes.c **** static void InvMixColumns(void)
 382:.././crypto/tiny-AES128-C/aes.c **** {
 383:.././crypto/tiny-AES128-C/aes.c ****   int i;
 384:.././crypto/tiny-AES128-C/aes.c ****   uint8_t a,b,c,d;
 385:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 386:.././crypto/tiny-AES128-C/aes.c ****   { 
 387:.././crypto/tiny-AES128-C/aes.c ****     a = (*state)[i][0];
 388:.././crypto/tiny-AES128-C/aes.c ****     b = (*state)[i][1];
 389:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 390:.././crypto/tiny-AES128-C/aes.c ****     d = (*state)[i][3];
 391:.././crypto/tiny-AES128-C/aes.c **** 
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][0] = Multiply(a, 0x0e) ^ Multiply(b, 0x0b) ^ Multiply(c, 0x0d) ^ Multiply(d, 0x09);
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 395:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 396:.././crypto/tiny-AES128-C/aes.c ****   }
 397:.././crypto/tiny-AES128-C/aes.c **** }
 398:.././crypto/tiny-AES128-C/aes.c **** 
 399:.././crypto/tiny-AES128-C/aes.c **** 
 400:.././crypto/tiny-AES128-C/aes.c **** // The SubBytes Function Substitutes the values in the
 401:.././crypto/tiny-AES128-C/aes.c **** // state matrix with values in an S-box.
 402:.././crypto/tiny-AES128-C/aes.c **** static void InvSubBytes(void)
 403:.././crypto/tiny-AES128-C/aes.c **** {
 530              	 .loc 1 403 1 is_stmt 1 view-0
 531              	 .cfi_startproc
 532              	 
 533              	 
 404:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 534              	 .loc 1 404 3 view .LVU165
 405:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 535              	 .loc 1 405 3 view .LVU166
 536              	.LVL30:
 537              	 .loc 1 405 11 view .LVU167
 403:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 538              	 .loc 1 403 1 is_stmt 0 view .LVU168
 539 0000 10B5     	 push {r4,lr}
 540              	.LCFI4:
 541              	 .cfi_def_cfa_offset 8
 542              	 .cfi_offset 4,-8
 543              	 .cfi_offset 14,-4
 406:.././crypto/tiny-AES128-C/aes.c ****   {
 407:.././crypto/tiny-AES128-C/aes.c ****     for(j=0;j<4;++j)
 408:.././crypto/tiny-AES128-C/aes.c ****     {
 409:.././crypto/tiny-AES128-C/aes.c ****       (*state)[j][i] = getSBoxInvert((*state)[j][i]);
 544              	 .loc 1 409 39 view .LVU169
 545 0002 084B     	 ldr r3,.L34
 546              	.LBB38:
 547              	.LBB39:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 548              	 .loc 1 137 15 view .LVU170
 549 0004 0848     	 ldr r0,.L34+4
 550 0006 1B68     	 ldr r3,[r3]
 551 0008 191D     	 adds r1,r3,#4
 552              	.LVL31:
 553              	.L30:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 554              	 .loc 1 137 15 view .LVU171
 555              	.LBE39:
 556              	.LBE38:
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 557              	 .loc 1 407 13 is_stmt 1 view .LVU172
 403:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i,j;
 558              	 .loc 1 403 1 is_stmt 0 view .LVU173
 559 000a 0022     	 movs r2,#0
 560              	.LVL32:
 561              	.L31:
 562              	 .loc 1 409 7 is_stmt 1 discriminator 3 view .LVU174
 563              	.LBB41:
 564              	.LBI38:
 135:.././crypto/tiny-AES128-C/aes.c **** {
 565              	 .loc 1 135 16 discriminator 3 view .LVU175
 566              	.LBB40:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 567              	 .loc 1 137 3 discriminator 3 view .LVU176
 137:.././crypto/tiny-AES128-C/aes.c **** }
 568              	 .loc 1 137 15 is_stmt 0 discriminator 3 view .LVU177
 569 000c 13F82240 	 ldrb r4,[r3,r2,lsl#2]
 570 0010 045D     	 ldrb r4,[r0,r4]
 571              	.LVL33:
 137:.././crypto/tiny-AES128-C/aes.c **** }
 572              	 .loc 1 137 15 discriminator 3 view .LVU178
 573              	.LBE40:
 574              	.LBE41:
 575              	 .loc 1 409 22 discriminator 3 view .LVU179
 576 0012 03F82240 	 strb r4,[r3,r2,lsl#2]
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 577              	 .loc 1 407 17 is_stmt 1 discriminator 3 view .LVU180
 578              	.LVL34:
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 579              	 .loc 1 407 13 discriminator 3 view .LVU181
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 580              	 .loc 1 407 5 is_stmt 0 discriminator 3 view .LVU182
 581 0016 0132     	 adds r2,r2,#1
 582              	.LVL35:
 407:.././crypto/tiny-AES128-C/aes.c ****     {
 583              	 .loc 1 407 5 discriminator 3 view .LVU183
 584 0018 042A     	 cmp r2,#4
 585 001a F7D1     	 bne .L31
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 586              	 .loc 1 405 15 is_stmt 1 discriminator 2 view .LVU184
 587              	.LVL36:
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 588              	 .loc 1 405 11 discriminator 2 view .LVU185
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 589              	 .loc 1 405 3 is_stmt 0 discriminator 2 view .LVU186
 590 001c 0133     	 adds r3,r3,#1
 591              	.LVL37:
 405:.././crypto/tiny-AES128-C/aes.c ****   {
 592              	 .loc 1 405 3 discriminator 2 view .LVU187
 593 001e 8B42     	 cmp r3,r1
 594 0020 F3D1     	 bne .L30
 410:.././crypto/tiny-AES128-C/aes.c ****     }
 411:.././crypto/tiny-AES128-C/aes.c ****   }
 412:.././crypto/tiny-AES128-C/aes.c **** }
 595              	 .loc 1 412 1 view .LVU188
 596 0022 10BD     	 pop {r4,pc}
 597              	.L35:
 598              	 .align 2
 599              	.L34:
 600 0024 00000000 	 .word .LANCHOR4
 601 0028 00000000 	 .word .LANCHOR5
 602              	 .cfi_endproc
 603              	.LFE9:
 605              	 .section .text.InvShiftRows,"ax",%progbits
 606              	 .align 1
 607              	 .syntax unified
 608              	 .thumb
 609              	 .thumb_func
 610              	 .fpu softvfp
 612              	InvShiftRows:
 613              	.LFB10:
 413:.././crypto/tiny-AES128-C/aes.c **** 
 414:.././crypto/tiny-AES128-C/aes.c **** static void InvShiftRows(void)
 415:.././crypto/tiny-AES128-C/aes.c **** {
 614              	 .loc 1 415 1 is_stmt 1 view-0
 615              	 .cfi_startproc
 616              	 
 617              	 
 618              	 
 416:.././crypto/tiny-AES128-C/aes.c ****   uint8_t temp;
 619              	 .loc 1 416 3 view .LVU190
 417:.././crypto/tiny-AES128-C/aes.c **** 
 418:.././crypto/tiny-AES128-C/aes.c ****   // Rotate first row 1 columns to right  
 419:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[3][1];
 620              	 .loc 1 419 3 view .LVU191
 621              	 .loc 1 419 9 is_stmt 0 view .LVU192
 622 0000 0D4B     	 ldr r3,.L37
 623 0002 1B68     	 ldr r3,[r3]
 420:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 624              	 .loc 1 420 17 view .LVU193
 625 0004 597A     	 ldrb r1,[r3,#9]
 419:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][1]=(*state)[2][1];
 626              	 .loc 1 419 7 view .LVU194
 627 0006 5A7B     	 ldrb r2,[r3,#13]
 628              	.LVL38:
 629              	 .loc 1 420 3 is_stmt 1 view .LVU195
 630              	 .loc 1 420 17 is_stmt 0 view .LVU196
 631 0008 5973     	 strb r1,[r3,#13]
 421:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][1]=(*state)[1][1];
 632              	 .loc 1 421 3 is_stmt 1 view .LVU197
 633              	 .loc 1 421 17 is_stmt 0 view .LVU198
 634 000a 5979     	 ldrb r1,[r3,#5]
 635 000c 5972     	 strb r1,[r3,#9]
 422:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][1]=(*state)[0][1];
 636              	 .loc 1 422 3 is_stmt 1 view .LVU199
 637              	 .loc 1 422 17 is_stmt 0 view .LVU200
 638 000e 5978     	 ldrb r1,[r3,#1]
 639 0010 5971     	 strb r1,[r3,#5]
 423:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1]=temp;
 640              	 .loc 1 423 3 is_stmt 1 view .LVU201
 424:.././crypto/tiny-AES128-C/aes.c **** 
 425:.././crypto/tiny-AES128-C/aes.c ****   // Rotate second row 2 columns to right 
 426:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[0][2];
 427:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2]=(*state)[2][2];
 641              	 .loc 1 427 17 is_stmt 0 view .LVU202
 642 0012 997A     	 ldrb r1,[r3,#10]
 423:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][1]=temp;
 643              	 .loc 1 423 17 view .LVU203
 644 0014 5A70     	 strb r2,[r3,#1]
 426:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2]=(*state)[2][2];
 645              	 .loc 1 426 3 is_stmt 1 view .LVU204
 426:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][2]=(*state)[2][2];
 646              	 .loc 1 426 7 is_stmt 0 view .LVU205
 647 0016 9A78     	 ldrb r2,[r3,#2]
 648              	.LVL39:
 649              	 .loc 1 427 3 is_stmt 1 view .LVU206
 650              	 .loc 1 427 17 is_stmt 0 view .LVU207
 651 0018 9970     	 strb r1,[r3,#2]
 428:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2]=temp;
 652              	 .loc 1 428 3 is_stmt 1 view .LVU208
 429:.././crypto/tiny-AES128-C/aes.c **** 
 430:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[1][2];
 431:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2]=(*state)[3][2];
 653              	 .loc 1 431 17 is_stmt 0 view .LVU209
 654 001a 997B     	 ldrb r1,[r3,#14]
 428:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][2]=temp;
 655              	 .loc 1 428 17 view .LVU210
 656 001c 9A72     	 strb r2,[r3,#10]
 430:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2]=(*state)[3][2];
 657              	 .loc 1 430 3 is_stmt 1 view .LVU211
 430:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][2]=(*state)[3][2];
 658              	 .loc 1 430 7 is_stmt 0 view .LVU212
 659 001e 9A79     	 ldrb r2,[r3,#6]
 660              	.LVL40:
 661              	 .loc 1 431 3 is_stmt 1 view .LVU213
 662              	 .loc 1 431 17 is_stmt 0 view .LVU214
 663 0020 9971     	 strb r1,[r3,#6]
 432:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2]=temp;
 664              	 .loc 1 432 3 is_stmt 1 view .LVU215
 433:.././crypto/tiny-AES128-C/aes.c **** 
 434:.././crypto/tiny-AES128-C/aes.c ****   // Rotate third row 3 columns to right
 435:.././crypto/tiny-AES128-C/aes.c ****   temp=(*state)[0][3];
 436:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3]=(*state)[1][3];
 665              	 .loc 1 436 17 is_stmt 0 view .LVU216
 666 0022 D979     	 ldrb r1,[r3,#7]
 432:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][2]=temp;
 667              	 .loc 1 432 17 view .LVU217
 668 0024 9A73     	 strb r2,[r3,#14]
 435:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3]=(*state)[1][3];
 669              	 .loc 1 435 3 is_stmt 1 view .LVU218
 435:.././crypto/tiny-AES128-C/aes.c ****   (*state)[0][3]=(*state)[1][3];
 670              	 .loc 1 435 7 is_stmt 0 view .LVU219
 671 0026 DA78     	 ldrb r2,[r3,#3]
 672              	.LVL41:
 673              	 .loc 1 436 3 is_stmt 1 view .LVU220
 674              	 .loc 1 436 17 is_stmt 0 view .LVU221
 675 0028 D970     	 strb r1,[r3,#3]
 437:.././crypto/tiny-AES128-C/aes.c ****   (*state)[1][3]=(*state)[2][3];
 676              	 .loc 1 437 3 is_stmt 1 view .LVU222
 677              	 .loc 1 437 17 is_stmt 0 view .LVU223
 678 002a D97A     	 ldrb r1,[r3,#11]
 679 002c D971     	 strb r1,[r3,#7]
 438:.././crypto/tiny-AES128-C/aes.c ****   (*state)[2][3]=(*state)[3][3];
 680              	 .loc 1 438 3 is_stmt 1 view .LVU224
 681              	 .loc 1 438 17 is_stmt 0 view .LVU225
 682 002e D97B     	 ldrb r1,[r3,#15]
 683 0030 D972     	 strb r1,[r3,#11]
 439:.././crypto/tiny-AES128-C/aes.c ****   (*state)[3][3]=temp;
 684              	 .loc 1 439 3 is_stmt 1 view .LVU226
 685              	 .loc 1 439 17 is_stmt 0 view .LVU227
 686 0032 DA73     	 strb r2,[r3,#15]
 440:.././crypto/tiny-AES128-C/aes.c **** }
 687              	 .loc 1 440 1 view .LVU228
 688 0034 7047     	 bx lr
 689              	.L38:
 690 0036 00BF     	 .align 2
 691              	.L37:
 692 0038 00000000 	 .word .LANCHOR4
 693              	 .cfi_endproc
 694              	.LFE10:
 696              	 .section .text.Cipher,"ax",%progbits
 697              	 .align 1
 698              	 .syntax unified
 699              	 .thumb
 700              	 .thumb_func
 701              	 .fpu softvfp
 703              	Cipher:
 704              	.LFB11:
 441:.././crypto/tiny-AES128-C/aes.c **** 
 442:.././crypto/tiny-AES128-C/aes.c **** 
 443:.././crypto/tiny-AES128-C/aes.c **** // Cipher is the main function that encrypts the PlainText.
 444:.././crypto/tiny-AES128-C/aes.c **** static void Cipher(void)
 445:.././crypto/tiny-AES128-C/aes.c **** {
 705              	 .loc 1 445 1 is_stmt 1 view-0
 706              	 .cfi_startproc
 707              	 
 708              	 
 446:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 709              	 .loc 1 446 3 view .LVU230
 710              	.LVL42:
 447:.././crypto/tiny-AES128-C/aes.c **** 
 448:.././crypto/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 449:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(0); 
 711              	 .loc 1 449 3 view .LVU231
 445:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round = 0;
 712              	 .loc 1 445 1 is_stmt 0 view .LVU232
 713 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 714              	.LCFI5:
 715              	 .cfi_def_cfa_offset 36
 716              	 .cfi_offset 4,-36
 717              	 .cfi_offset 5,-32
 718              	 .cfi_offset 6,-28
 719              	 .cfi_offset 7,-24
 720              	 .cfi_offset 8,-20
 721              	 .cfi_offset 9,-16
 722              	 .cfi_offset 10,-12
 723              	 .cfi_offset 11,-8
 724              	 .cfi_offset 14,-4
 725 0004 85B0     	 sub sp,sp,#20
 726              	.LCFI6:
 727              	 .cfi_def_cfa_offset 56
 728              	 .loc 1 449 3 view .LVU233
 729 0006 244D     	 ldr r5,.L44
 450:.././crypto/tiny-AES128-C/aes.c ****   
 451:.././crypto/tiny-AES128-C/aes.c ****   // There will be Nr rounds.
 452:.././crypto/tiny-AES128-C/aes.c ****   // The first Nr-1 rounds are identical.
 453:.././crypto/tiny-AES128-C/aes.c ****   // These Nr-1 rounds are executed in the loop below.
 454:.././crypto/tiny-AES128-C/aes.c ****   for(round = 1; round < Nr; ++round)
 455:.././crypto/tiny-AES128-C/aes.c ****   {
 456:.././crypto/tiny-AES128-C/aes.c ****     SubBytes();
 730              	 .loc 1 456 5 view .LVU234
 731 0008 DFF89090 	 ldr r9,.L44+4
 457:.././crypto/tiny-AES128-C/aes.c ****     ShiftRows();
 732              	 .loc 1 457 5 view .LVU235
 733 000c DFF89080 	 ldr r8,.L44+8
 449:.././crypto/tiny-AES128-C/aes.c ****   
 734              	 .loc 1 449 3 view .LVU236
 735 0010 0020     	 movs r0,#0
 736 0012 A847     	 blx r5
 737              	.LVL43:
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 738              	 .loc 1 454 3 is_stmt 1 view .LVU237
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 739              	 .loc 1 454 18 view .LVU238
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 740              	 .loc 1 454 13 is_stmt 0 view .LVU239
 741 0014 0124     	 movs r4,#1
 742 0016 0195     	 str r5,[sp,#4]
 743              	.LVL44:
 744              	.L41:
 456:.././crypto/tiny-AES128-C/aes.c ****     ShiftRows();
 745              	 .loc 1 456 5 is_stmt 1 discriminator 3 view .LVU240
 746 0018 C847     	 blx r9
 747              	.LVL45:
 748              	 .loc 1 457 5 discriminator 3 view .LVU241
 749 001a C047     	 blx r8
 750              	.LVL46:
 458:.././crypto/tiny-AES128-C/aes.c ****     MixColumns();
 751              	 .loc 1 458 5 discriminator 3 view .LVU242
 752              	.LBB44:
 753              	.LBI44:
 333:.././crypto/tiny-AES128-C/aes.c **** {
 754              	 .loc 1 333 13 discriminator 3 view .LVU243
 755              	.LBB45:
 335:.././crypto/tiny-AES128-C/aes.c ****   uint8_t Tmp,Tm,t;
 756              	 .loc 1 335 3 discriminator 3 view .LVU244
 336:.././crypto/tiny-AES128-C/aes.c ****   for(i = 0; i < 4; ++i)
 757              	 .loc 1 336 3 discriminator 3 view .LVU245
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 758              	 .loc 1 337 3 discriminator 3 view .LVU246
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 759              	 .loc 1 337 14 discriminator 3 view .LVU247
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 760              	 .loc 1 349 12 is_stmt 0 discriminator 3 view .LVU248
 761 001c 214B     	 ldr r3,.L44+12
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 762              	 .loc 1 351 50 discriminator 3 view .LVU249
 763 001e DFF888A0 	 ldr r10,.L44+16
 764 0022 1A68     	 ldr r2,[r3]
 765 0024 02F11003 	 add r3,r2,#16
 766 0028 0293     	 str r3,[sp,#8]
 767              	.LVL47:
 768              	.L40:
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 769              	 .loc 1 349 5 is_stmt 1 view .LVU250
 349:.././crypto/tiny-AES128-C/aes.c ****     Tmp = (*state)[i][0] ^ (*state)[i][1] ^ (*state)[i][2] ^ (*state)[i][3] ;
 770              	 .loc 1 349 9 is_stmt 0 view .LVU251
 771 002a 92F800B0 	 ldrb fp,[r2]
 772              	.LVL48:
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 773              	 .loc 1 350 5 is_stmt 1 view .LVU252
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 774              	 .loc 1 350 39 is_stmt 0 view .LVU253
 775 002e 5578     	 ldrb r5,[r2,#1]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 776              	 .loc 1 350 56 view .LVU254
 777 0030 9178     	 ldrb r1,[r2,#2]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 778              	 .loc 1 350 73 view .LVU255
 779 0032 D778     	 ldrb r7,[r2,#3]
 350:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][0] ^ (*state)[i][1] ; Tm = xtime(Tm);  (*state)[i][0] ^= Tm ^ Tmp ;
 780              	 .loc 1 350 9 view .LVU256
 781 0034 8BEA0500 	 eor r0,fp,r5
 782 0038 81EA0703 	 eor r3,r1,r7
 783 003c 83EA0006 	 eor r6,r3,r0
 784 0040 0393     	 str r3,[sp,#12]
 785              	.LVL49:
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 786              	 .loc 1 351 5 is_stmt 1 view .LVU257
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 787              	 .loc 1 351 45 view .LVU258
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 788              	 .loc 1 351 50 is_stmt 0 view .LVU259
 789 0042 D047     	 blx r10
 790              	.LVL50:
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 791              	 .loc 1 351 62 is_stmt 1 view .LVU260
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 792              	 .loc 1 351 77 is_stmt 0 view .LVU261
 793 0044 8BEA0000 	 eor r0,fp,r0
 794              	.LVL51:
 351:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][1] ^ (*state)[i][2] ; Tm = xtime(Tm);  (*state)[i][1] ^= Tm ^ Tmp ;
 795              	 .loc 1 351 77 view .LVU262
 796 0048 7040     	 eors r0,r0,r6
 797 004a 1070     	 strb r0,[r2]
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 798              	 .loc 1 352 5 is_stmt 1 view .LVU263
 799              	.LVL52:
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 800              	 .loc 1 352 45 view .LVU264
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 801              	 .loc 1 352 50 is_stmt 0 view .LVU265
 802 004c 85EA0100 	 eor r0,r5,r1
 803              	.LVL53:
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 804              	 .loc 1 352 50 view .LVU266
 805 0050 D047     	 blx r10
 806              	.LVL54:
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 807              	 .loc 1 352 62 is_stmt 1 view .LVU267
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 808              	 .loc 1 353 50 is_stmt 0 view .LVU268
 809 0052 039B     	 ldr r3,[sp,#12]
 352:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][2] ^ (*state)[i][3] ; Tm = xtime(Tm);  (*state)[i][2] ^= Tm ^ Tmp ;
 810              	 .loc 1 352 77 view .LVU269
 811 0054 4540     	 eors r5,r5,r0
 812 0056 7540     	 eors r5,r5,r6
 813 0058 5570     	 strb r5,[r2,#1]
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 814              	 .loc 1 353 5 is_stmt 1 view .LVU270
 815              	.LVL55:
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 816              	 .loc 1 353 45 view .LVU271
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 817              	 .loc 1 353 50 is_stmt 0 view .LVU272
 818 005a 1846     	 mov r0,r3
 819 005c D047     	 blx r10
 820              	.LVL56:
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 821              	 .loc 1 353 62 is_stmt 1 view .LVU273
 353:.././crypto/tiny-AES128-C/aes.c ****     Tm  = (*state)[i][3] ^ t ;        Tm = xtime(Tm);  (*state)[i][3] ^= Tm ^ Tmp ;
 822              	 .loc 1 353 77 is_stmt 0 view .LVU274
 823 005e 4140     	 eors r1,r1,r0
 824 0060 7140     	 eors r1,r1,r6
 825 0062 9170     	 strb r1,[r2,#2]
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 826              	 .loc 1 354 5 is_stmt 1 view .LVU275
 827              	.LVL57:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 828              	 .loc 1 354 39 view .LVU276
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 829              	 .loc 1 354 44 is_stmt 0 view .LVU277
 830 0064 8BEA0700 	 eor r0,fp,r7
 831              	.LVL58:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 832              	 .loc 1 354 44 view .LVU278
 833 0068 D047     	 blx r10
 834              	.LVL59:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 835              	 .loc 1 354 56 is_stmt 1 view .LVU279
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 836              	 .loc 1 354 71 is_stmt 0 view .LVU280
 837 006a 4740     	 eors r7,r7,r0
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 838              	 .loc 1 337 3 view .LVU281
 839 006c 029B     	 ldr r3,[sp,#8]
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 840              	 .loc 1 354 71 view .LVU282
 841 006e 7E40     	 eors r6,r6,r7
 842              	.LVL60:
 354:.././crypto/tiny-AES128-C/aes.c ****   }
 843              	 .loc 1 354 71 view .LVU283
 844 0070 D670     	 strb r6,[r2,#3]
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 845              	 .loc 1 337 21 is_stmt 1 view .LVU284
 846              	.LVL61:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 847              	 .loc 1 337 14 view .LVU285
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 848              	 .loc 1 337 3 is_stmt 0 view .LVU286
 849 0072 0432     	 adds r2,r2,#4
 850              	.LVL62:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 851              	 .loc 1 337 3 view .LVU287
 852 0074 9342     	 cmp r3,r2
 853 0076 D8D1     	 bne .L40
 854              	.LVL63:
 337:.././crypto/tiny-AES128-C/aes.c ****   {  
 855              	 .loc 1 337 3 view .LVU288
 856              	.LBE45:
 857              	.LBE44:
 459:.././crypto/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 858              	 .loc 1 459 5 is_stmt 1 discriminator 3 view .LVU289
 859 0078 2046     	 mov r0,r4
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 860              	 .loc 1 454 30 is_stmt 0 discriminator 3 view .LVU290
 861 007a 0134     	 adds r4,r4,#1
 862              	.LVL64:
 863              	 .loc 1 459 5 discriminator 3 view .LVU291
 864 007c 019B     	 ldr r3,[sp,#4]
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 865              	 .loc 1 454 30 discriminator 3 view .LVU292
 866 007e E4B2     	 uxtb r4,r4
 867              	 .loc 1 459 5 discriminator 3 view .LVU293
 868 0080 9847     	 blx r3
 869              	.LVL65:
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 870              	 .loc 1 454 30 is_stmt 1 discriminator 3 view .LVU294
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 871              	 .loc 1 454 18 discriminator 3 view .LVU295
 454:.././crypto/tiny-AES128-C/aes.c ****   {
 872              	 .loc 1 454 3 is_stmt 0 discriminator 3 view .LVU296
 873 0082 0A2C     	 cmp r4,#10
 874 0084 C8D1     	 bne .L41
 460:.././crypto/tiny-AES128-C/aes.c ****   }
 461:.././crypto/tiny-AES128-C/aes.c ****   
 462:.././crypto/tiny-AES128-C/aes.c ****   // The last round is given below.
 463:.././crypto/tiny-AES128-C/aes.c ****   // The MixColumns function is not here in the last round.
 464:.././crypto/tiny-AES128-C/aes.c ****   SubBytes();
 875              	 .loc 1 464 3 is_stmt 1 view .LVU297
 876 0086 054B     	 ldr r3,.L44+4
 877 0088 9847     	 blx r3
 878              	.LVL66:
 465:.././crypto/tiny-AES128-C/aes.c ****   ShiftRows();
 879              	 .loc 1 465 3 view .LVU298
 880 008a C047     	 blx r8
 881              	.LVL67:
 466:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 882              	 .loc 1 466 3 view .LVU299
 883 008c 019B     	 ldr r3,[sp,#4]
 884 008e 2046     	 mov r0,r4
 467:.././crypto/tiny-AES128-C/aes.c **** }
 885              	 .loc 1 467 1 is_stmt 0 view .LVU300
 886 0090 05B0     	 add sp,sp,#20
 887              	.LCFI7:
 888              	 .cfi_def_cfa_offset 36
 889              	 
 890 0092 BDE8F04F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 891              	.LCFI8:
 892              	 .cfi_restore 14
 893              	 .cfi_restore 11
 894              	 .cfi_restore 10
 895              	 .cfi_restore 9
 896              	 .cfi_restore 8
 897              	 .cfi_restore 7
 898              	 .cfi_restore 6
 899              	 .cfi_restore 5
 900              	 .cfi_restore 4
 901              	 .cfi_def_cfa_offset 0
 902              	.LVL68:
 466:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 903              	 .loc 1 466 3 view .LVU301
 904 0096 1847     	 bx r3
 905              	.LVL69:
 906              	.L45:
 466:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(Nr);
 907              	 .loc 1 466 3 view .LVU302
 908              	 .align 2
 909              	.L44:
 910 0098 00000000 	 .word AddRoundKey
 911 009c 00000000 	 .word SubBytes
 912 00a0 00000000 	 .word ShiftRows
 913 00a4 00000000 	 .word .LANCHOR4
 914 00a8 00000000 	 .word xtime
 915              	 .cfi_endproc
 916              	.LFE11:
 918              	 .section .text.BlockCopy,"ax",%progbits
 919              	 .align 1
 920              	 .syntax unified
 921              	 .thumb
 922              	 .thumb_func
 923              	 .fpu softvfp
 925              	BlockCopy:
 926              	.LVL70:
 927              	.LFB13:
 468:.././crypto/tiny-AES128-C/aes.c **** 
 469:.././crypto/tiny-AES128-C/aes.c **** static void InvCipher(void)
 470:.././crypto/tiny-AES128-C/aes.c **** {
 471:.././crypto/tiny-AES128-C/aes.c ****   uint8_t round=0;
 472:.././crypto/tiny-AES128-C/aes.c **** 
 473:.././crypto/tiny-AES128-C/aes.c ****   // Add the First round key to the state before starting the rounds.
 474:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(Nr); 
 475:.././crypto/tiny-AES128-C/aes.c **** 
 476:.././crypto/tiny-AES128-C/aes.c ****   // There will be Nr rounds.
 477:.././crypto/tiny-AES128-C/aes.c ****   // The first Nr-1 rounds are identical.
 478:.././crypto/tiny-AES128-C/aes.c ****   // These Nr-1 rounds are executed in the loop below.
 479:.././crypto/tiny-AES128-C/aes.c ****   for(round=Nr-1;round>0;round--)
 480:.././crypto/tiny-AES128-C/aes.c ****   {
 481:.././crypto/tiny-AES128-C/aes.c ****     InvShiftRows();
 482:.././crypto/tiny-AES128-C/aes.c ****     InvSubBytes();
 483:.././crypto/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 484:.././crypto/tiny-AES128-C/aes.c ****     InvMixColumns();
 485:.././crypto/tiny-AES128-C/aes.c ****   }
 486:.././crypto/tiny-AES128-C/aes.c ****   
 487:.././crypto/tiny-AES128-C/aes.c ****   // The last round is given below.
 488:.././crypto/tiny-AES128-C/aes.c ****   // The MixColumns function is not here in the last round.
 489:.././crypto/tiny-AES128-C/aes.c ****   InvShiftRows();
 490:.././crypto/tiny-AES128-C/aes.c ****   InvSubBytes();
 491:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 492:.././crypto/tiny-AES128-C/aes.c **** }
 493:.././crypto/tiny-AES128-C/aes.c **** 
 494:.././crypto/tiny-AES128-C/aes.c **** static void BlockCopy(uint8_t* output, const uint8_t* input)
 495:.././crypto/tiny-AES128-C/aes.c **** {
 928              	 .loc 1 495 1 is_stmt 1 view-0
 929              	 .cfi_startproc
 930              	 
 931              	 
 932              	 
 496:.././crypto/tiny-AES128-C/aes.c ****   uint8_t i;
 933              	 .loc 1 496 3 view .LVU304
 497:.././crypto/tiny-AES128-C/aes.c ****   for (i=0;i<KEYLEN;++i)
 934              	 .loc 1 497 3 view .LVU305
 935              	 .loc 1 497 12 view .LVU306
 936 0000 4B1E     	 subs r3,r1,#1
 937 0002 0138     	 subs r0,r0,#1
 938              	.LVL71:
 939              	 .loc 1 497 12 is_stmt 0 view .LVU307
 940 0004 0F31     	 adds r1,r1,#15
 941              	.LVL72:
 942              	.L47:
 498:.././crypto/tiny-AES128-C/aes.c ****   {
 499:.././crypto/tiny-AES128-C/aes.c ****     output[i] = input[i];
 943              	 .loc 1 499 5 is_stmt 1 discriminator 3 view .LVU308
 944              	 .loc 1 499 22 is_stmt 0 discriminator 3 view .LVU309
 945 0006 13F8012F 	 ldrb r2,[r3,#1]!
 946              	.LVL73:
 947              	 .loc 1 499 15 discriminator 3 view .LVU310
 948 000a 00F8012F 	 strb r2,[r0,#1]!
 497:.././crypto/tiny-AES128-C/aes.c ****   for (i=0;i<KEYLEN;++i)
 949              	 .loc 1 497 21 is_stmt 1 discriminator 3 view .LVU311
 950              	.LVL74:
 497:.././crypto/tiny-AES128-C/aes.c ****   for (i=0;i<KEYLEN;++i)
 951              	 .loc 1 497 12 discriminator 3 view .LVU312
 497:.././crypto/tiny-AES128-C/aes.c ****   for (i=0;i<KEYLEN;++i)
 952              	 .loc 1 497 3 is_stmt 0 discriminator 3 view .LVU313
 953 000e 8B42     	 cmp r3,r1
 954 0010 F9D1     	 bne .L47
 500:.././crypto/tiny-AES128-C/aes.c ****   }
 501:.././crypto/tiny-AES128-C/aes.c **** }
 955              	 .loc 1 501 1 view .LVU314
 956 0012 7047     	 bx lr
 957              	 .cfi_endproc
 958              	.LFE13:
 960              	 .section .text.AES128_ECB_indp_setkey,"ax",%progbits
 961              	 .align 1
 962              	 .global AES128_ECB_indp_setkey
 963              	 .syntax unified
 964              	 .thumb
 965              	 .thumb_func
 966              	 .fpu softvfp
 968              	AES128_ECB_indp_setkey:
 969              	.LVL75:
 970              	.LFB14:
 502:.././crypto/tiny-AES128-C/aes.c **** 
 503:.././crypto/tiny-AES128-C/aes.c **** 
 504:.././crypto/tiny-AES128-C/aes.c **** 
 505:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 506:.././crypto/tiny-AES128-C/aes.c **** /* Public functions:                                                         */
 507:.././crypto/tiny-AES128-C/aes.c **** /*****************************************************************************/
 508:.././crypto/tiny-AES128-C/aes.c **** 
 509:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_indp_setkey(uint8_t* key)
 510:.././crypto/tiny-AES128-C/aes.c **** {
 971              	 .loc 1 510 1 is_stmt 1 view-0
 972              	 .cfi_startproc
 973              	 
 974              	 
 975              	 
 511:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 976              	 .loc 1 511 3 view .LVU316
 977              	 .loc 1 511 7 is_stmt 0 view .LVU317
 978 0000 014B     	 ldr r3,.L50
 979 0002 1860     	 str r0,[r3]
 512:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 980              	 .loc 1 512 3 is_stmt 1 view .LVU318
 981 0004 014B     	 ldr r3,.L50+4
 982 0006 1847     	 bx r3
 983              	.LVL76:
 984              	.L51:
 985              	 .loc 1 512 3 is_stmt 0 view .LVU319
 986              	 .align 2
 987              	.L50:
 988 0008 00000000 	 .word .LANCHOR0
 989 000c 00000000 	 .word KeyExpansion
 990              	 .cfi_endproc
 991              	.LFE14:
 993              	 .section .text.AES128_ECB_indp_crypto,"ax",%progbits
 994              	 .align 1
 995              	 .global AES128_ECB_indp_crypto
 996              	 .syntax unified
 997              	 .thumb
 998              	 .thumb_func
 999              	 .fpu softvfp
 1001              	AES128_ECB_indp_crypto:
 1002              	.LVL77:
 1003              	.LFB15:
 513:.././crypto/tiny-AES128-C/aes.c **** }
 514:.././crypto/tiny-AES128-C/aes.c **** 
 515:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_indp_crypto(uint8_t* input)
 516:.././crypto/tiny-AES128-C/aes.c **** {
 1004              	 .loc 1 516 1 is_stmt 1 view-0
 1005              	 .cfi_startproc
 1006              	 
 1007              	 
 517:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)input;
 1008              	 .loc 1 517 3 view .LVU321
 516:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)input;
 1009              	 .loc 1 516 1 is_stmt 0 view .LVU322
 1010 0000 10B5     	 push {r4,lr}
 1011              	.LCFI9:
 1012              	 .cfi_def_cfa_offset 8
 1013              	 .cfi_offset 4,-8
 1014              	 .cfi_offset 14,-4
 1015              	 .loc 1 517 9 view .LVU323
 1016 0002 054B     	 ldr r3,.L53
 516:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)input;
 1017              	 .loc 1 516 1 view .LVU324
 1018 0004 0146     	 mov r1,r0
 1019              	 .loc 1 517 9 view .LVU325
 1020 0006 1860     	 str r0,[r3]
 518:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(input_save, input);
 1021              	 .loc 1 518 3 is_stmt 1 view .LVU326
 1022 0008 044B     	 ldr r3,.L53+4
 1023 000a 0548     	 ldr r0,.L53+8
 1024              	.LVL78:
 1025              	 .loc 1 518 3 is_stmt 0 view .LVU327
 1026 000c 9847     	 blx r3
 1027              	.LVL79:
 519:.././crypto/tiny-AES128-C/aes.c ****   Cipher();
 1028              	 .loc 1 519 3 is_stmt 1 view .LVU328
 520:.././crypto/tiny-AES128-C/aes.c **** }
 1029              	 .loc 1 520 1 is_stmt 0 view .LVU329
 1030 000e BDE81040 	 pop {r4,lr}
 1031              	.LCFI10:
 1032              	 .cfi_restore 14
 1033              	 .cfi_restore 4
 1034              	 .cfi_def_cfa_offset 0
 519:.././crypto/tiny-AES128-C/aes.c ****   Cipher();
 1035              	 .loc 1 519 3 view .LVU330
 1036 0012 044B     	 ldr r3,.L53+12
 1037 0014 1847     	 bx r3
 1038              	.LVL80:
 1039              	.L54:
 1040 0016 00BF     	 .align 2
 1041              	.L53:
 1042 0018 00000000 	 .word .LANCHOR4
 1043 001c 00000000 	 .word BlockCopy
 1044 0020 00000000 	 .word .LANCHOR6
 1045 0024 00000000 	 .word Cipher
 1046              	 .cfi_endproc
 1047              	.LFE15:
 1049              	 .section .text.AES128_ECB_encrypt,"ax",%progbits
 1050              	 .align 1
 1051              	 .global AES128_ECB_encrypt
 1052              	 .syntax unified
 1053              	 .thumb
 1054              	 .thumb_func
 1055              	 .fpu softvfp
 1057              	AES128_ECB_encrypt:
 1058              	.LVL81:
 1059              	.LFB16:
 521:.././crypto/tiny-AES128-C/aes.c **** 
 522:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_encrypt(uint8_t* input, uint8_t* key, uint8_t* output)
 523:.././crypto/tiny-AES128-C/aes.c **** {
 1060              	 .loc 1 523 1 is_stmt 1 view-0
 1061              	 .cfi_startproc
 1062              	 
 1063              	 
 524:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 525:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(output, input);
 1064              	 .loc 1 525 3 view .LVU332
 523:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1065              	 .loc 1 523 1 is_stmt 0 view .LVU333
 1066 0000 70B5     	 push {r4,r5,r6,lr}
 1067              	.LCFI11:
 1068              	 .cfi_def_cfa_offset 16
 1069              	 .cfi_offset 4,-16
 1070              	 .cfi_offset 5,-12
 1071              	 .cfi_offset 6,-8
 1072              	 .cfi_offset 14,-4
 1073              	 .loc 1 525 3 view .LVU334
 1074 0002 084B     	 ldr r3,.L56
 523:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1075              	 .loc 1 523 1 view .LVU335
 1076 0004 0D46     	 mov r5,r1
 1077              	 .loc 1 525 3 view .LVU336
 1078 0006 0146     	 mov r1,r0
 1079              	.LVL82:
 1080              	 .loc 1 525 3 view .LVU337
 1081 0008 1046     	 mov r0,r2
 1082              	.LVL83:
 523:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1083              	 .loc 1 523 1 view .LVU338
 1084 000a 1446     	 mov r4,r2
 1085              	 .loc 1 525 3 view .LVU339
 1086 000c 9847     	 blx r3
 1087              	.LVL84:
 526:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1088              	 .loc 1 526 3 is_stmt 1 view .LVU340
 1089              	 .loc 1 526 9 is_stmt 0 view .LVU341
 1090 000e 064B     	 ldr r3,.L56+4
 1091 0010 1C60     	 str r4,[r3]
 527:.././crypto/tiny-AES128-C/aes.c **** 
 528:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 1092              	 .loc 1 528 3 is_stmt 1 view .LVU342
 1093              	 .loc 1 528 7 is_stmt 0 view .LVU343
 1094 0012 064B     	 ldr r3,.L56+8
 1095 0014 1D60     	 str r5,[r3]
 529:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 1096              	 .loc 1 529 3 is_stmt 1 view .LVU344
 1097 0016 064B     	 ldr r3,.L56+12
 1098 0018 9847     	 blx r3
 1099              	.LVL85:
 530:.././crypto/tiny-AES128-C/aes.c **** 
 531:.././crypto/tiny-AES128-C/aes.c ****   // The next function call encrypts the PlainText with the Key using AES algorithm.
 532:.././crypto/tiny-AES128-C/aes.c ****   Cipher();
 1100              	 .loc 1 532 3 view .LVU345
 533:.././crypto/tiny-AES128-C/aes.c **** }
 1101              	 .loc 1 533 1 is_stmt 0 view .LVU346
 1102 001a BDE87040 	 pop {r4,r5,r6,lr}
 1103              	.LCFI12:
 1104              	 .cfi_restore 14
 1105              	 .cfi_restore 6
 1106              	 .cfi_restore 5
 1107              	 .cfi_restore 4
 1108              	 .cfi_def_cfa_offset 0
 1109              	.LVL86:
 532:.././crypto/tiny-AES128-C/aes.c **** }
 1110              	 .loc 1 532 3 view .LVU347
 1111 001e 054B     	 ldr r3,.L56+16
 1112 0020 1847     	 bx r3
 1113              	.LVL87:
 1114              	.L57:
 1115 0022 00BF     	 .align 2
 1116              	.L56:
 1117 0024 00000000 	 .word BlockCopy
 1118 0028 00000000 	 .word .LANCHOR4
 1119 002c 00000000 	 .word .LANCHOR0
 1120 0030 00000000 	 .word KeyExpansion
 1121 0034 00000000 	 .word Cipher
 1122              	 .cfi_endproc
 1123              	.LFE16:
 1125              	 .section .text.AES128_ECB_decrypt,"ax",%progbits
 1126              	 .align 1
 1127              	 .global AES128_ECB_decrypt
 1128              	 .syntax unified
 1129              	 .thumb
 1130              	 .thumb_func
 1131              	 .fpu softvfp
 1133              	AES128_ECB_decrypt:
 1134              	.LVL88:
 1135              	.LFB17:
 534:.././crypto/tiny-AES128-C/aes.c **** 
 535:.././crypto/tiny-AES128-C/aes.c **** void AES128_ECB_decrypt(uint8_t* input, uint8_t* key, uint8_t *output)
 536:.././crypto/tiny-AES128-C/aes.c **** {
 1136              	 .loc 1 536 1 is_stmt 1 view-0
 1137              	 .cfi_startproc
 1138              	 
 1139              	 
 537:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 538:.././crypto/tiny-AES128-C/aes.c ****   BlockCopy(output, input);
 1140              	 .loc 1 538 3 view .LVU349
 536:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1141              	 .loc 1 536 1 is_stmt 0 view .LVU350
 1142 0000 2DE9F04F 	 push {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1143              	.LCFI13:
 1144              	 .cfi_def_cfa_offset 36
 1145              	 .cfi_offset 4,-36
 1146              	 .cfi_offset 5,-32
 1147              	 .cfi_offset 6,-28
 1148              	 .cfi_offset 7,-24
 1149              	 .cfi_offset 8,-20
 1150              	 .cfi_offset 9,-16
 1151              	 .cfi_offset 10,-12
 1152              	 .cfi_offset 11,-8
 1153              	 .cfi_offset 14,-4
 1154              	 .loc 1 538 3 view .LVU351
 1155 0004 554B     	 ldr r3,.L63
 536:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1156              	 .loc 1 536 1 view .LVU352
 1157 0006 8DB0     	 sub sp,sp,#52
 1158              	.LCFI14:
 1159              	 .cfi_def_cfa_offset 88
 536:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1160              	 .loc 1 536 1 view .LVU353
 1161 0008 0C46     	 mov r4,r1
 1162              	 .loc 1 538 3 view .LVU354
 1163 000a 0146     	 mov r1,r0
 1164              	.LVL89:
 1165              	 .loc 1 538 3 view .LVU355
 1166 000c 1046     	 mov r0,r2
 1167              	.LVL90:
 536:.././crypto/tiny-AES128-C/aes.c ****   // Copy input to output, and work in-memory on output
 1168              	 .loc 1 536 1 view .LVU356
 1169 000e 9146     	 mov r9,r2
 1170              	 .loc 1 538 3 view .LVU357
 1171 0010 9847     	 blx r3
 1172              	.LVL91:
 539:.././crypto/tiny-AES128-C/aes.c ****   state = (state_t*)output;
 1173              	 .loc 1 539 3 is_stmt 1 view .LVU358
 1174              	 .loc 1 539 9 is_stmt 0 view .LVU359
 1175 0012 534B     	 ldr r3,.L63+4
 1176 0014 C3F80090 	 str r9,[r3]
 540:.././crypto/tiny-AES128-C/aes.c **** 
 541:.././crypto/tiny-AES128-C/aes.c ****   // The KeyExpansion routine must be called before encryption.
 542:.././crypto/tiny-AES128-C/aes.c ****   Key = key;
 1177              	 .loc 1 542 3 is_stmt 1 view .LVU360
 1178              	 .loc 1 542 7 is_stmt 0 view .LVU361
 1179 0018 524B     	 ldr r3,.L63+8
 1180 001a 1C60     	 str r4,[r3]
 543:.././crypto/tiny-AES128-C/aes.c ****   KeyExpansion();
 1181              	 .loc 1 543 3 is_stmt 1 view .LVU362
 1182 001c 524B     	 ldr r3,.L63+12
 1183              	.LBB50:
 1184              	.LBB51:
 474:.././crypto/tiny-AES128-C/aes.c **** 
 1185              	 .loc 1 474 3 is_stmt 0 view .LVU363
 1186 001e 534C     	 ldr r4,.L63+16
 1187              	.LVL92:
 474:.././crypto/tiny-AES128-C/aes.c **** 
 1188              	 .loc 1 474 3 view .LVU364
 1189              	.LBE51:
 1190              	.LBE50:
 1191              	 .loc 1 543 3 view .LVU365
 1192 0020 9847     	 blx r3
 1193              	.LVL93:
 544:.././crypto/tiny-AES128-C/aes.c **** 
 545:.././crypto/tiny-AES128-C/aes.c ****   InvCipher();
 1194              	 .loc 1 545 3 is_stmt 1 view .LVU366
 1195              	.LBB58:
 1196              	.LBI50:
 469:.././crypto/tiny-AES128-C/aes.c **** {
 1197              	 .loc 1 469 13 view .LVU367
 1198              	.LBB56:
 471:.././crypto/tiny-AES128-C/aes.c **** 
 1199              	 .loc 1 471 3 view .LVU368
 474:.././crypto/tiny-AES128-C/aes.c **** 
 1200              	 .loc 1 474 3 view .LVU369
 1201 0022 0A20     	 movs r0,#10
 1202 0024 A047     	 blx r4
 1203              	.LVL94:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1204              	 .loc 1 479 3 view .LVU370
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1205              	 .loc 1 479 18 view .LVU371
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1206              	 .loc 1 479 12 is_stmt 0 view .LVU372
 1207 0026 4FF00908 	 mov r8,#9
 483:.././crypto/tiny-AES128-C/aes.c ****     InvMixColumns();
 1208              	 .loc 1 483 5 view .LVU373
 1209 002a 0A94     	 str r4,[sp,#40]
 1210              	.LVL95:
 1211              	.L60:
 481:.././crypto/tiny-AES128-C/aes.c ****     InvSubBytes();
 1212              	 .loc 1 481 5 is_stmt 1 view .LVU374
 1213 002c 504B     	 ldr r3,.L63+20
 1214              	.LBB52:
 1215              	.LBB53:
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1216              	 .loc 1 392 22 is_stmt 0 view .LVU375
 1217 002e 514C     	 ldr r4,.L63+24
 1218              	.LBE53:
 1219              	.LBE52:
 481:.././crypto/tiny-AES128-C/aes.c ****     InvSubBytes();
 1220              	 .loc 1 481 5 view .LVU376
 1221 0030 9847     	 blx r3
 1222              	.LVL96:
 482:.././crypto/tiny-AES128-C/aes.c ****     AddRoundKey(round);
 1223              	 .loc 1 482 5 is_stmt 1 view .LVU377
 1224 0032 514B     	 ldr r3,.L63+28
 1225 0034 9847     	 blx r3
 1226              	.LVL97:
 483:.././crypto/tiny-AES128-C/aes.c ****     InvMixColumns();
 1227              	 .loc 1 483 5 view .LVU378
 1228 0036 0A9B     	 ldr r3,[sp,#40]
 1229 0038 4046     	 mov r0,r8
 1230 003a 9847     	 blx r3
 1231              	.LVL98:
 484:.././crypto/tiny-AES128-C/aes.c ****   }
 1232              	 .loc 1 484 5 view .LVU379
 1233              	.LBB55:
 1234              	.LBI52:
 381:.././crypto/tiny-AES128-C/aes.c **** {
 1235              	 .loc 1 381 13 view .LVU380
 1236              	.LBB54:
 383:.././crypto/tiny-AES128-C/aes.c ****   uint8_t a,b,c,d;
 1237              	 .loc 1 383 3 view .LVU381
 384:.././crypto/tiny-AES128-C/aes.c ****   for(i=0;i<4;++i)
 1238              	 .loc 1 384 3 view .LVU382
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1239              	 .loc 1 385 3 view .LVU383
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1240              	 .loc 1 385 11 view .LVU384
 1241 003c 09F11003 	 add r3,r9,#16
 1242 0040 4D46     	 mov r5,r9
 1243 0042 0993     	 str r3,[sp,#36]
 1244              	.LVL99:
 1245              	.L59:
 387:.././crypto/tiny-AES128-C/aes.c ****     b = (*state)[i][1];
 1246              	 .loc 1 387 5 view .LVU385
 387:.././crypto/tiny-AES128-C/aes.c ****     b = (*state)[i][1];
 1247              	 .loc 1 387 7 is_stmt 0 view .LVU386
 1248 0044 95F800B0 	 ldrb fp,[r5]
 1249              	.LVL100:
 388:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 1250              	 .loc 1 388 5 is_stmt 1 view .LVU387
 389:.././crypto/tiny-AES128-C/aes.c ****     d = (*state)[i][3];
 1251              	 .loc 1 389 7 is_stmt 0 view .LVU388
 1252 0048 AB78     	 ldrb r3,[r5,#2]
 1253 004a 0093     	 str r3,[sp]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1254              	 .loc 1 392 22 view .LVU389
 1255 004c 5846     	 mov r0,fp
 390:.././crypto/tiny-AES128-C/aes.c **** 
 1256              	 .loc 1 390 7 view .LVU390
 1257 004e EB78     	 ldrb r3,[r5,#3]
 1258 0050 0793     	 str r3,[sp,#28]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1259              	 .loc 1 392 22 view .LVU391
 1260 0052 A047     	 blx r4
 1261              	.LVL101:
 1262 0054 0290     	 str r0,[sp,#8]
 1263 0056 A047     	 blx r4
 1264              	.LVL102:
 1265 0058 0390     	 str r0,[sp,#12]
 1266 005a A047     	 blx r4
 1267              	.LVL103:
 388:.././crypto/tiny-AES128-C/aes.c ****     c = (*state)[i][2];
 1268              	 .loc 1 388 7 view .LVU392
 1269 005c 95F801A0 	 ldrb r10,[r5,#1]
 1270              	.LVL104:
 389:.././crypto/tiny-AES128-C/aes.c ****     d = (*state)[i][3];
 1271              	 .loc 1 389 5 is_stmt 1 view .LVU393
 390:.././crypto/tiny-AES128-C/aes.c **** 
 1272              	 .loc 1 390 5 view .LVU394
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1273              	 .loc 1 392 5 view .LVU395
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1274              	 .loc 1 392 22 is_stmt 0 view .LVU396
 1275 0060 0190     	 str r0,[sp,#4]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1276              	 .loc 1 392 42 view .LVU397
 1277 0062 5046     	 mov r0,r10
 1278 0064 A047     	 blx r4
 1279              	.LVL105:
 1280 0066 0146     	 mov r1,r0
 1281 0068 A047     	 blx r4
 1282              	.LVL106:
 1283 006a 0490     	 str r0,[sp,#16]
 1284 006c A047     	 blx r4
 1285              	.LVL107:
 1286 006e 0746     	 mov r7,r0
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1287              	 .loc 1 392 62 view .LVU398
 1288 0070 0098     	 ldr r0,[sp]
 1289 0072 A047     	 blx r4
 1290              	.LVL108:
 1291 0074 0590     	 str r0,[sp,#20]
 1292 0076 A047     	 blx r4
 1293              	.LVL109:
 1294 0078 0690     	 str r0,[sp,#24]
 1295 007a A047     	 blx r4
 1296              	.LVL110:
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1297              	 .loc 1 392 82 view .LVU399
 1298 007c 079B     	 ldr r3,[sp,#28]
 1299 007e 0B93     	 str r3,[sp,#44]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1300              	 .loc 1 392 62 view .LVU400
 1301 0080 0646     	 mov r6,r0
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1302              	 .loc 1 392 82 view .LVU401
 1303 0082 1846     	 mov r0,r3
 1304 0084 A047     	 blx r4
 1305              	.LVL111:
 1306 0086 0790     	 str r0,[sp,#28]
 1307              	.LVL112:
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1308              	 .loc 1 392 82 view .LVU402
 1309 0088 A047     	 blx r4
 1310              	.LVL113:
 1311 008a 0890     	 str r0,[sp,#32]
 1312 008c A047     	 blx r4
 1313              	.LVL114:
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1314              	 .loc 1 392 80 view .LVU403
 1315 008e DDE90232 	 ldrd r3,r2,[sp,#8]
 1316 0092 83EA020C 	 eor ip,r3,r2
 1317 0096 019B     	 ldr r3,[sp,#4]
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1318              	 .loc 1 393 80 view .LVU404
 1319 0098 019A     	 ldr r2,[sp,#4]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1320              	 .loc 1 392 80 view .LVU405
 1321 009a 83EA0C0C 	 eor ip,r3,ip
 1322 009e 81EA0C0C 	 eor ip,r1,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1323              	 .loc 1 393 80 view .LVU406
 1324 00a2 5140     	 eors r1,r1,r2
 1325 00a4 049A     	 ldr r2,[sp,#16]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1326              	 .loc 1 392 80 view .LVU407
 1327 00a6 069B     	 ldr r3,[sp,#24]
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1328              	 .loc 1 393 80 view .LVU408
 1329 00a8 5140     	 eors r1,r1,r2
 1330 00aa 059A     	 ldr r2,[sp,#20]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1331              	 .loc 1 392 80 view .LVU409
 1332 00ac 87EA0C0C 	 eor ip,r7,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1333              	 .loc 1 393 80 view .LVU410
 1334 00b0 7940     	 eors r1,r1,r7
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1335              	 .loc 1 392 80 view .LVU411
 1336 00b2 83EA0C0C 	 eor ip,r3,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1337              	 .loc 1 393 80 view .LVU412
 1338 00b6 5140     	 eors r1,r1,r2
 1339 00b8 089A     	 ldr r2,[sp,#32]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1340              	 .loc 1 392 80 view .LVU413
 1341 00ba 009B     	 ldr r3,[sp]
 1342 00bc 86EA0C0C 	 eor ip,r6,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1343              	 .loc 1 393 80 view .LVU414
 1344 00c0 7140     	 eors r1,r1,r6
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1345              	 .loc 1 392 80 view .LVU415
 1346 00c2 80EA0C0C 	 eor ip,r0,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1347              	 .loc 1 393 80 view .LVU416
 1348 00c6 5140     	 eors r1,r1,r2
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1349              	 .loc 1 392 80 view .LVU417
 1350 00c8 8AEA0C0C 	 eor ip,r10,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1351              	 .loc 1 393 80 view .LVU418
 1352 00cc 009A     	 ldr r2,[sp]
 1353 00ce 4140     	 eors r1,r1,r0
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1354              	 .loc 1 392 80 view .LVU419
 1355 00d0 83EA0C0C 	 eor ip,r3,ip
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1356              	 .loc 1 393 80 view .LVU420
 1357 00d4 8BEA0101 	 eor r1,fp,r1
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1358              	 .loc 1 392 80 view .LVU421
 1359 00d8 0B9B     	 ldr r3,[sp,#44]
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1360              	 .loc 1 393 80 view .LVU422
 1361 00da 5140     	 eors r1,r1,r2
 1362 00dc 5940     	 eors r1,r1,r3
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1363              	 .loc 1 392 80 view .LVU423
 1364 00de 83EA0C0C 	 eor ip,r3,ip
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1365              	 .loc 1 394 80 view .LVU424
 1366 00e2 039A     	 ldr r2,[sp,#12]
 392:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][1] = Multiply(a, 0x09) ^ Multiply(b, 0x0e) ^ Multiply(c, 0x0b) ^ Multiply(d, 0x0d);
 1367              	 .loc 1 392 20 view .LVU425
 1368 00e4 85F800C0 	 strb ip,[r5]
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1369              	 .loc 1 393 5 is_stmt 1 view .LVU426
 393:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][2] = Multiply(a, 0x0d) ^ Multiply(b, 0x09) ^ Multiply(c, 0x0e) ^ Multiply(d, 0x0b);
 1370              	 .loc 1 393 20 is_stmt 0 view .LVU427
 1371 00e8 6970     	 strb r1,[r5,#1]
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1372              	 .loc 1 394 5 is_stmt 1 view .LVU428
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1373              	 .loc 1 394 80 is_stmt 0 view .LVU429
 1374 00ea 0199     	 ldr r1,[sp,#4]
 1375 00ec 5140     	 eors r1,r1,r2
 1376 00ee 059A     	 ldr r2,[sp,#20]
 1377 00f0 7940     	 eors r1,r1,r7
 1378 00f2 5140     	 eors r1,r1,r2
 1379 00f4 069A     	 ldr r2,[sp,#24]
 1380 00f6 5140     	 eors r1,r1,r2
 1381 00f8 079A     	 ldr r2,[sp,#28]
 1382 00fa 7140     	 eors r1,r1,r6
 1383 00fc 5140     	 eors r1,r1,r2
 1384 00fe 4140     	 eors r1,r1,r0
 1385 0100 8BEA0101 	 eor r1,fp,r1
 1386 0104 8AEA0101 	 eor r1,r10,r1
 1387 0108 4B40     	 eors r3,r3,r1
 394:.././crypto/tiny-AES128-C/aes.c ****     (*state)[i][3] = Multiply(a, 0x0b) ^ Multiply(b, 0x0d) ^ Multiply(c, 0x09) ^ Multiply(d, 0x0e);
 1388              	 .loc 1 394 20 view .LVU430
 1389 010a AB70     	 strb r3,[r5,#2]
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1390              	 .loc 1 395 5 is_stmt 1 view .LVU431
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1391              	 .loc 1 395 80 is_stmt 0 view .LVU432
 1392 010c DDE90123 	 ldrd r2,r3,[sp,#4]
 1393 0110 5340     	 eors r3,r3,r2
 1394 0112 049A     	 ldr r2,[sp,#16]
 1395 0114 5340     	 eors r3,r3,r2
 1396 0116 5F40     	 eors r7,r7,r3
 1397 0118 079B     	 ldr r3,[sp,#28]
 1398 011a 7E40     	 eors r6,r6,r7
 1399 011c 5E40     	 eors r6,r6,r3
 1400 011e 089B     	 ldr r3,[sp,#32]
 1401 0120 5E40     	 eors r6,r6,r3
 1402 0122 7040     	 eors r0,r0,r6
 1403 0124 009B     	 ldr r3,[sp]
 1404 0126 8BEA000B 	 eor fp,fp,r0
 1405              	.LVL115:
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1406              	 .loc 1 395 80 view .LVU433
 1407 012a 8AEA0B0A 	 eor r10,r10,fp
 1408              	.LVL116:
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1409              	 .loc 1 395 80 view .LVU434
 1410 012e 83EA0A02 	 eor r2,r3,r10
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1411              	 .loc 1 385 3 view .LVU435
 1412 0132 099B     	 ldr r3,[sp,#36]
 395:.././crypto/tiny-AES128-C/aes.c ****   }
 1413              	 .loc 1 395 20 view .LVU436
 1414 0134 EA70     	 strb r2,[r5,#3]
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1415              	 .loc 1 385 15 is_stmt 1 view .LVU437
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1416              	 .loc 1 385 11 view .LVU438
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1417              	 .loc 1 385 3 is_stmt 0 view .LVU439
 1418 0136 0435     	 adds r5,r5,#4
 1419 0138 AB42     	 cmp r3,r5
 1420 013a 83D1     	 bne .L59
 1421              	.LVL117:
 385:.././crypto/tiny-AES128-C/aes.c ****   { 
 1422              	 .loc 1 385 3 view .LVU440
 1423              	.LBE54:
 1424              	.LBE55:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1425              	 .loc 1 479 26 is_stmt 1 view .LVU441
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1426              	 .loc 1 479 31 is_stmt 0 view .LVU442
 1427 013c 08F1FF38 	 add r8,r8,#-1
 1428              	.LVL118:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1429              	 .loc 1 479 18 is_stmt 1 view .LVU443
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1430              	 .loc 1 479 3 is_stmt 0 view .LVU444
 1431 0140 18F0FF08 	 ands r8,r8,#255
 1432              	.LVL119:
 479:.././crypto/tiny-AES128-C/aes.c ****   {
 1433              	 .loc 1 479 3 view .LVU445
 1434 0144 7FF472AF 	 bne .L60
 489:.././crypto/tiny-AES128-C/aes.c ****   InvSubBytes();
 1435              	 .loc 1 489 3 is_stmt 1 view .LVU446
 1436 0148 094B     	 ldr r3,.L63+20
 1437 014a 9847     	 blx r3
 1438              	.LVL120:
 490:.././crypto/tiny-AES128-C/aes.c ****   AddRoundKey(0);
 1439              	 .loc 1 490 3 view .LVU447
 1440 014c 0A4B     	 ldr r3,.L63+28
 1441 014e 9847     	 blx r3
 1442              	.LVL121:
 491:.././crypto/tiny-AES128-C/aes.c **** }
 1443              	 .loc 1 491 3 view .LVU448
 1444 0150 064B     	 ldr r3,.L63+16
 1445 0152 4046     	 mov r0,r8
 1446              	.LBE56:
 1447              	.LBE58:
 546:.././crypto/tiny-AES128-C/aes.c **** }
 1448              	 .loc 1 546 1 is_stmt 0 view .LVU449
 1449 0154 0DB0     	 add sp,sp,#52
 1450              	.LCFI15:
 1451              	 .cfi_def_cfa_offset 36
 1452              	 
 1453 0156 BDE8F04F 	 pop {r4,r5,r6,r7,r8,r9,r10,fp,lr}
 1454              	.LCFI16:
 1455              	 .cfi_restore 14
 1456              	 .cfi_restore 11
 1457              	 .cfi_restore 10
 1458              	 .cfi_restore 9
 1459              	 .cfi_restore 8
 1460              	 .cfi_restore 7
 1461              	 .cfi_restore 6
 1462              	 .cfi_restore 5
 1463              	 .cfi_restore 4
 1464              	 .cfi_def_cfa_offset 0
 1465              	.LVL122:
 1466              	.LBB59:
 1467              	.LBB57:
 491:.././crypto/tiny-AES128-C/aes.c **** }
 1468              	 .loc 1 491 3 view .LVU450
 1469 015a 1847     	 bx r3
 1470              	.LVL123:
 1471              	.L64:
 1472              	 .align 2
 1473              	.L63:
 1474 015c 00000000 	 .word BlockCopy
 1475 0160 00000000 	 .word .LANCHOR4
 1476 0164 00000000 	 .word .LANCHOR0
 1477 0168 00000000 	 .word KeyExpansion
 1478 016c 00000000 	 .word AddRoundKey
 1479 0170 00000000 	 .word InvShiftRows
 1480 0174 00000000 	 .word xtime
 1481 0178 00000000 	 .word InvSubBytes
 1482              	.LBE57:
 1483              	.LBE59:
 1484              	 .cfi_endproc
 1485              	.LFE17:
 1487              	 .global Rcon
 1488              	 .global rsbox
 1489              	 .global sbox
 1490              	 .section .bss.Key,"aw",%nobits
 1491              	 .align 2
 1492              	 .set .LANCHOR0,.+0
 1495              	Key:
 1496 0000 00000000 	 .space 4
 1497              	 .section .bss.RoundKey,"aw",%nobits
 1498              	 .set .LANCHOR1,.+0
 1501              	RoundKey:
 1502 0000 00000000 	 .space 176
 1502      00000000 
 1502      00000000 
 1502      00000000 
 1502      00000000 
 1503              	 .section .bss.input_save,"aw",%nobits
 1504              	 .set .LANCHOR6,.+0
 1507              	input_save:
 1508 0000 00000000 	 .space 16
 1508      00000000 
 1508      00000000 
 1508      00000000 
 1509              	 .section .bss.state,"aw",%nobits
 1510              	 .align 2
 1511              	 .set .LANCHOR4,.+0
 1514              	state:
 1515 0000 00000000 	 .space 4
 1516              	 .section .data.Rcon,"aw"
 1517              	 .set .LANCHOR3,.+0
 1520              	Rcon:
 1521 0000 8D010204 	 .ascii "\215\001\002\004\010\020 @\200\0336"
 1521      08102040 
 1521      801B36
 1522              	 .section .data.rsbox,"aw"
 1523              	 .set .LANCHOR5,.+0
 1526              	rsbox:
 1527 0000 52096AD5 	 .ascii "R\011j\32506\2458\277@\243\236\201\363\327\373|\343"
 1527      3036A538 
 1527      BF40A39E 
 1527      81F3D7FB 
 1527      7CE3
 1528 0012 39829B2F 	 .ascii "9\202\233/\377\2074\216CD\304\336\351\313T{\2242\246"
 1528      FF87348E 
 1528      4344C4DE 
 1528      E9CB547B 
 1528      9432A6
 1529 0025 C2233DEE 	 .ascii "\302#=\356L\225\013B\372\303N\010.\241f(\331$\262v["
 1529      4C950B42 
 1529      FAC34E08 
 1529      2EA16628 
 1529      D924B276 
 1530 003a A2496D8B 	 .ascii "\242Im\213\321%r\370\366d\206h\230\026\324\244\\\314"
 1530      D12572F8 
 1530      F6648668 
 1530      9816D4A4 
 1530      5CCC
 1531 004c 5D65B692 	 .ascii "]e\266\222lpHP\375\355\271\332^\025FW\247\215\235\204"
 1531      6C704850 
 1531      FDEDB9DA 
 1531      5E154657 
 1531      A78D9D84 
 1532 0060 90D8AB00 	 .ascii "\220\330\253\000\214\274\323\012\367\344X\005\270\263"
 1532      8CBCD30A 
 1532      F7E45805 
 1532      B8B3
 1533 006e 4506D02C 	 .ascii "E\006\320,\036\217\312?\017\002\301\257\275\003\001"
 1533      1E8FCA3F 
 1533      0F02C1AF 
 1533      BD0301
 1534 007d 138A6B3A 	 .ascii "\023\212k:\221\021AOg\334\352\227\362\317\316\360\264"
 1534      9111414F 
 1534      67DCEA97 
 1534      F2CFCEF0 
 1534      B4
 1535 008e E67396AC 	 .ascii "\346s\226\254t\"\347\2555\205\342\3717\350\034u\337"
 1535      7422E7AD 
 1535      3585E2F9 
 1535      37E81C75 
 1535      DF
 1536 009f 6E47F11A 	 .ascii "nG\361\032q\035)\305\211o\267b\016\252\030\276\033\374"
 1536      711D29C5 
 1536      896FB762 
 1536      0EAA18BE 
 1536      1BFC
 1537 00b1 563E4BC6 	 .ascii "V>K\306\322y \232\333\300\376x\315Z\364\037\335\250"
 1537      D279209A 
 1537      DBC0FE78 
 1537      CD5AF41F 
 1537      DDA8
 1538 00c3 338807C7 	 .ascii "3\210\007\3071\261\022\020Y'\200\354_`Q\177\251\031"
 1538      31B11210 
 1538      592780EC 
 1538      5F60517F 
 1538      A919
 1539 00d5 B54A0D2D 	 .ascii "\265J\015-\345z\237\223\311\234\357\240\340;M\256*\365"
 1539      E57A9F93 
 1539      C99CEFA0 
 1539      E03B4DAE 
 1539      2AF5
 1540 00e7 B0C8EBBB 	 .ascii "\260\310\353\273<\203S\231a\027+\004~\272w\326&\341"
 1540      3C835399 
 1540      61172B04 
 1540      7EBA77D6 
 1540      26E1
 1541 00f9 69146355 	 .ascii "i\024cU!\014}"
 1541      210C7D
 1542              	 .section .data.sbox,"aw"
 1543              	 .set .LANCHOR2,.+0
 1546              	sbox:
 1547 0000 637C777B 	 .ascii "c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 1547      F26B6FC5 
 1547      3001672B 
 1547      FED7AB76 
 1547      CA82C97D 
 1548 0015 5947F0AD 	 .ascii "YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 1548      D4A2AF9C 
 1548      A472C0B7 
 1548      FD932636 
 1548      3FF7
 1549 0027 CC34A5E5 	 .ascii "\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 1549      F171D831 
 1549      1504C723 
 1549      C3189605 
 1550 0037 9A071280 	 .ascii "\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 1550      E2EB27B2 
 1550      7509832C 
 1550      1A1B6E5A 
 1550      A0
 1551 0048 523BD6B3 	 .ascii "R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 1551      29E32F84 
 1551      53D100ED 
 1551      20FCB15B 
 1551      6ACBBE
 1552 005b 394A4C58 	 .ascii "9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 1552      CFD0EFAA 
 1552      FB434D33 
 1552      8545F902 
 1552      7F503C9F 
 1553 0070 51A3408F 	 .ascii "Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 1553      929D38F5 
 1553      BCB6DA21 
 1553      10FFF3D2 
 1554 0080 CD0C13EC 	 .ascii "\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 1554      5F974417 
 1554      C4A77E3D 
 1554      645D1973 
 1554      60814FDC 
 1555 0094 222A9088 	 .ascii "\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 1555      46EEB814 
 1555      DE5E0BDB 
 1555      E0323A0A 
 1555      4906
 1556 00a6 245CC2D3 	 .ascii "$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 1556      AC629195 
 1556      E479E7C8 
 1556      376D8DD5 
 1556      4EA9
 1557 00b8 6C56F4EA 	 .ascii "lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 1557      657AAE08 
 1557      BA78252E 
 1557      1CA6B4C6 
 1557      E8DD
 1558 00ca 741F4BBD 	 .ascii "t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 1558      8B8A703E 
 1558      B5664803 
 1558      F60E6135 
 1558      57B986C1 
 1559 00de 1D9EE1F8 	 .ascii "\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 1559      981169D9 
 1559      8E949B1E 
 1559      87E9
 1560 00ec CE5528DF 	 .ascii "\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 1560      8CA1890D 
 1560      BFE64268 
 1560      41992D0F 
 1560      B054
 1561 00fe BB16     	 .ascii "\273\026"
 1562              	 .text
 1563              	.Letext0:
 1564              	 .file 2 "c:\\chipwh~2\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 1565              	 .file 3 "c:\\chipwh~2\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_stdint.h"
DEFINED SYMBOLS
                            *ABS*:00000000 aes.c
    {standard input}:16     .text.KeyExpansion:00000000 $t
    {standard input}:23     .text.KeyExpansion:00000000 KeyExpansion
    {standard input}:237    .text.KeyExpansion:000000a0 $d
    {standard input}:246    .text.AddRoundKey:00000000 $t
    {standard input}:252    .text.AddRoundKey:00000000 AddRoundKey
    {standard input}:313    .text.AddRoundKey:00000030 $d
    {standard input}:319    .text.SubBytes:00000000 $t
    {standard input}:325    .text.SubBytes:00000000 SubBytes
    {standard input}:397    .text.SubBytes:00000024 $d
    {standard input}:403    .text.ShiftRows:00000000 $t
    {standard input}:409    .text.ShiftRows:00000000 ShiftRows
    {standard input}:489    .text.ShiftRows:00000038 $d
    {standard input}:494    .text.xtime:00000000 $t
    {standard input}:500    .text.xtime:00000000 xtime
    {standard input}:522    .text.InvSubBytes:00000000 $t
    {standard input}:528    .text.InvSubBytes:00000000 InvSubBytes
    {standard input}:600    .text.InvSubBytes:00000024 $d
    {standard input}:606    .text.InvShiftRows:00000000 $t
    {standard input}:612    .text.InvShiftRows:00000000 InvShiftRows
    {standard input}:692    .text.InvShiftRows:00000038 $d
    {standard input}:697    .text.Cipher:00000000 $t
    {standard input}:703    .text.Cipher:00000000 Cipher
    {standard input}:910    .text.Cipher:00000098 $d
    {standard input}:919    .text.BlockCopy:00000000 $t
    {standard input}:925    .text.BlockCopy:00000000 BlockCopy
    {standard input}:961    .text.AES128_ECB_indp_setkey:00000000 $t
    {standard input}:968    .text.AES128_ECB_indp_setkey:00000000 AES128_ECB_indp_setkey
    {standard input}:988    .text.AES128_ECB_indp_setkey:00000008 $d
    {standard input}:994    .text.AES128_ECB_indp_crypto:00000000 $t
    {standard input}:1001   .text.AES128_ECB_indp_crypto:00000000 AES128_ECB_indp_crypto
    {standard input}:1042   .text.AES128_ECB_indp_crypto:00000018 $d
    {standard input}:1050   .text.AES128_ECB_encrypt:00000000 $t
    {standard input}:1057   .text.AES128_ECB_encrypt:00000000 AES128_ECB_encrypt
    {standard input}:1117   .text.AES128_ECB_encrypt:00000024 $d
    {standard input}:1126   .text.AES128_ECB_decrypt:00000000 $t
    {standard input}:1133   .text.AES128_ECB_decrypt:00000000 AES128_ECB_decrypt
    {standard input}:1474   .text.AES128_ECB_decrypt:0000015c $d
    {standard input}:1520   .data.Rcon:00000000 Rcon
    {standard input}:1526   .data.rsbox:00000000 rsbox
    {standard input}:1546   .data.sbox:00000000 sbox
    {standard input}:1491   .bss.Key:00000000 $d
    {standard input}:1495   .bss.Key:00000000 Key
    {standard input}:1501   .bss.RoundKey:00000000 RoundKey
    {standard input}:1502   .bss.RoundKey:00000000 $d
    {standard input}:1507   .bss.input_save:00000000 input_save
    {standard input}:1508   .bss.input_save:00000000 $d
    {standard input}:1510   .bss.state:00000000 $d
    {standard input}:1514   .bss.state:00000000 state
                           .group:00000000 wm4.0.545a0e1134fc651afe6e71660705947f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.newlib.h.8.7cb3972cd43265932d4782d5eb589854
                           .group:00000000 wm4.ieeefp.h.77.f33a4dce62116f6f5175ff8bae57a54c
                           .group:00000000 wm4.config.h.224.c701144a7b0518c6ee9b9b5465b79f81
                           .group:00000000 wm4._ansi.h.31.de524f58584151836e90d8620a16f8e8
                           .group:00000000 wm4.stddef.h.39.27677723d43e5b5a7afdf8d798429f1d
                           .group:00000000 wm4._types.h.20.dd0d04dca3800a0d2a6129b87f3adbb2
                           .group:00000000 wm4.stddef.h.155.3588ebfdd1e8c7ede80509bb9c3b8009
                           .group:00000000 wm4._types.h.127.34941de1b2539d59d5cac00e0dd27a45
                           .group:00000000 wm4.reent.h.17.e292bf8b0bec6c96e131a54347145a30
                           .group:00000000 wm4.lock.h.2.1461d1fff82dffe8bfddc23307f6484f
                           .group:00000000 wm4.reent.h.77.dcd6129ff07fe81bd5636db29abe53b2
                           .group:00000000 wm4.cdefs.h.49.3d0fe8ea14e93bda8c589d4f684b21b8
                           .group:00000000 wm4.string.h.15.dab3980bf35408a4c507182805e2de3a
                           .group:00000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:00000000 wm4.aes.h.4.cf06fc201d60d48abc47258a872e401d

NO UNDEFINED SYMBOLS
