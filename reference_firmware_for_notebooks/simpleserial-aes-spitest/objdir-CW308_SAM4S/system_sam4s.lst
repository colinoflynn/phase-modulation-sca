   1              	 .cpu cortex-m4
   2              	 .eabi_attribute 20,1
   3              	 .eabi_attribute 21,1
   4              	 .eabi_attribute 23,3
   5              	 .eabi_attribute 24,1
   6              	 .eabi_attribute 25,1
   7              	 .eabi_attribute 26,1
   8              	 .eabi_attribute 30,4
   9              	 .eabi_attribute 34,1
  10              	 .eabi_attribute 18,4
  11              	 .file "system_sam4s.c"
  12              	 .text
  13              	.Ltext0:
  14              	 .cfi_sections .debug_frame
  15              	 .section .text.SystemInit,"ax",%progbits
  16              	 .align 1
  17              	 .global SystemInit
  18              	 .arch armv7e-m
  19              	 .syntax unified
  20              	 .thumb
  21              	 .thumb_func
  22              	 .fpu softvfp
  24              	SystemInit:
  25              	.LFB123:
  26              	 .file 1 ".././hal/sam4s/system_sam4s.c"
   1:.././hal/sam4s/system_sam4s.c **** /**
   2:.././hal/sam4s/system_sam4s.c ****  * \file
   3:.././hal/sam4s/system_sam4s.c ****  *
   4:.././hal/sam4s/system_sam4s.c ****  * \brief Provides the low-level initialization functions that called 
   5:.././hal/sam4s/system_sam4s.c ****  * on chip startup.
   6:.././hal/sam4s/system_sam4s.c ****  *
   7:.././hal/sam4s/system_sam4s.c ****  * Copyright (c) 2011-2018 Microchip Technology Inc. and its subsidiaries.
   8:.././hal/sam4s/system_sam4s.c ****  *
   9:.././hal/sam4s/system_sam4s.c ****  * \asf_license_start
  10:.././hal/sam4s/system_sam4s.c ****  *
  11:.././hal/sam4s/system_sam4s.c ****  * \page License
  12:.././hal/sam4s/system_sam4s.c ****  *
  13:.././hal/sam4s/system_sam4s.c ****  * Subject to your compliance with these terms, you may use Microchip
  14:.././hal/sam4s/system_sam4s.c ****  * software and any derivatives exclusively with Microchip products.
  15:.././hal/sam4s/system_sam4s.c ****  * It is your responsibility to comply with third party license terms applicable
  16:.././hal/sam4s/system_sam4s.c ****  * to your use of third party software (including open source software) that
  17:.././hal/sam4s/system_sam4s.c ****  * may accompany Microchip software.
  18:.././hal/sam4s/system_sam4s.c ****  *
  19:.././hal/sam4s/system_sam4s.c ****  * THIS SOFTWARE IS SUPPLIED BY MICROCHIP "AS IS". NO WARRANTIES,
  20:.././hal/sam4s/system_sam4s.c ****  * WHETHER EXPRESS, IMPLIED OR STATUTORY, APPLY TO THIS SOFTWARE,
  21:.././hal/sam4s/system_sam4s.c ****  * INCLUDING ANY IMPLIED WARRANTIES OF NON-INFRINGEMENT, MERCHANTABILITY,
  22:.././hal/sam4s/system_sam4s.c ****  * AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT WILL MICROCHIP BE
  23:.././hal/sam4s/system_sam4s.c ****  * LIABLE FOR ANY INDIRECT, SPECIAL, PUNITIVE, INCIDENTAL OR CONSEQUENTIAL
  24:.././hal/sam4s/system_sam4s.c ****  * LOSS, DAMAGE, COST OR EXPENSE OF ANY KIND WHATSOEVER RELATED TO THE
  25:.././hal/sam4s/system_sam4s.c ****  * SOFTWARE, HOWEVER CAUSED, EVEN IF MICROCHIP HAS BEEN ADVISED OF THE
  26:.././hal/sam4s/system_sam4s.c ****  * POSSIBILITY OR THE DAMAGES ARE FORESEEABLE.  TO THE FULLEST EXTENT
  27:.././hal/sam4s/system_sam4s.c ****  * ALLOWED BY LAW, MICROCHIP'S TOTAL LIABILITY ON ALL CLAIMS IN ANY WAY
  28:.././hal/sam4s/system_sam4s.c ****  * RELATED TO THIS SOFTWARE WILL NOT EXCEED THE AMOUNT OF FEES, IF ANY,
  29:.././hal/sam4s/system_sam4s.c ****  * THAT YOU HAVE PAID DIRECTLY TO MICROCHIP FOR THIS SOFTWARE.
  30:.././hal/sam4s/system_sam4s.c ****  *
  31:.././hal/sam4s/system_sam4s.c ****  * \asf_license_stop
  32:.././hal/sam4s/system_sam4s.c ****  *
  33:.././hal/sam4s/system_sam4s.c ****  */
  34:.././hal/sam4s/system_sam4s.c **** /*
  35:.././hal/sam4s/system_sam4s.c ****  * Support and FAQ: visit <a href="https://www.microchip.com/support/">Microchip Support</a>
  36:.././hal/sam4s/system_sam4s.c ****  */
  37:.././hal/sam4s/system_sam4s.c **** 
  38:.././hal/sam4s/system_sam4s.c **** #include "sam4s.h"
  39:.././hal/sam4s/system_sam4s.c **** 
  40:.././hal/sam4s/system_sam4s.c **** /* @cond 0 */
  41:.././hal/sam4s/system_sam4s.c **** /**INDENT-OFF**/
  42:.././hal/sam4s/system_sam4s.c **** #ifdef __cplusplus
  43:.././hal/sam4s/system_sam4s.c **** extern "C" {
  44:.././hal/sam4s/system_sam4s.c **** #endif
  45:.././hal/sam4s/system_sam4s.c **** /**INDENT-ON**/
  46:.././hal/sam4s/system_sam4s.c **** /* @endcond */
  47:.././hal/sam4s/system_sam4s.c **** 
  48:.././hal/sam4s/system_sam4s.c **** /* External oscillator definition, to be overriden by application */
  49:.././hal/sam4s/system_sam4s.c **** #define CHIP_FREQ_XTAL_12M (12000000UL)
  50:.././hal/sam4s/system_sam4s.c **** 
  51:.././hal/sam4s/system_sam4s.c **** #if (!defined CHIP_FREQ_XTAL)
  52:.././hal/sam4s/system_sam4s.c **** #  define CHIP_FREQ_XTAL CHIP_FREQ_XTAL_12M
  53:.././hal/sam4s/system_sam4s.c **** #endif
  54:.././hal/sam4s/system_sam4s.c **** 
  55:.././hal/sam4s/system_sam4s.c **** /* Clock Settings (4MHz) using Internal Fast RC */
  56:.././hal/sam4s/system_sam4s.c **** uint32_t SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  57:.././hal/sam4s/system_sam4s.c **** 
  58:.././hal/sam4s/system_sam4s.c **** /**
  59:.././hal/sam4s/system_sam4s.c ****  * \brief Setup the microcontroller system.
  60:.././hal/sam4s/system_sam4s.c ****  *
  61:.././hal/sam4s/system_sam4s.c ****  * Initialize the System and update the SystemFrequency variable.
  62:.././hal/sam4s/system_sam4s.c ****  */
  63:.././hal/sam4s/system_sam4s.c **** void SystemInit( void )
  64:.././hal/sam4s/system_sam4s.c **** {
  27              	 .loc 1 64 1 view-0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  65:.././hal/sam4s/system_sam4s.c **** 	/*
  66:.././hal/sam4s/system_sam4s.c **** 	 * TODO:
  67:.././hal/sam4s/system_sam4s.c **** 	 * Add code to initialize the system according to your application.
  68:.././hal/sam4s/system_sam4s.c **** 	 *
  69:.././hal/sam4s/system_sam4s.c **** 	 * For SAM4S, the internal 4MHz fast RC oscillator is the default clock
  70:.././hal/sam4s/system_sam4s.c **** 	 * selected at system reset state.
  71:.././hal/sam4s/system_sam4s.c **** 	 */
  72:.././hal/sam4s/system_sam4s.c **** 
  73:.././hal/sam4s/system_sam4s.c **** 	/* Set FWS according to default clock configuration */
  74:.././hal/sam4s/system_sam4s.c **** 	EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  32              	 .loc 1 74 2 view .LVU1
  33              	 .loc 1 74 17 is_stmt 0 view .LVU2
  34 0000 014B     	 ldr r3,.L2
  35 0002 024A     	 ldr r2,.L2+4
  36 0004 1A60     	 str r2,[r3]
  75:.././hal/sam4s/system_sam4s.c **** #if defined(ID_EFC1)
  76:.././hal/sam4s/system_sam4s.c **** 	EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
  77:.././hal/sam4s/system_sam4s.c **** #endif
  78:.././hal/sam4s/system_sam4s.c **** }
  37              	 .loc 1 78 1 view .LVU3
  38 0006 7047     	 bx lr
  39              	.L3:
  40              	 .align 2
  41              	.L2:
  42 0008 000A0E40 	 .word 1074661888
  43 000c 00010004 	 .word 67109120
  44              	 .cfi_endproc
  45              	.LFE123:
  47              	 .section .text.SystemCoreClockUpdate,"ax",%progbits
  48              	 .align 1
  49              	 .global SystemCoreClockUpdate
  50              	 .syntax unified
  51              	 .thumb
  52              	 .thumb_func
  53              	 .fpu softvfp
  55              	SystemCoreClockUpdate:
  56              	.LFB124:
  79:.././hal/sam4s/system_sam4s.c **** 
  80:.././hal/sam4s/system_sam4s.c **** /**
  81:.././hal/sam4s/system_sam4s.c ****  * \brief Get Core Clock Frequency.
  82:.././hal/sam4s/system_sam4s.c ****  */
  83:.././hal/sam4s/system_sam4s.c **** void SystemCoreClockUpdate( void )
  84:.././hal/sam4s/system_sam4s.c **** {
  57              	 .loc 1 84 1 is_stmt 1 view-0
  58              	 .cfi_startproc
  59              	 
  60              	 
  85:.././hal/sam4s/system_sam4s.c **** 	/* Determine clock frequency according to clock register values */
  86:.././hal/sam4s/system_sam4s.c **** 	switch ( PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk ) {
  61              	 .loc 1 86 2 view .LVU5
  84:.././hal/sam4s/system_sam4s.c **** 	/* Determine clock frequency according to clock register values */
  62              	 .loc 1 84 1 is_stmt 0 view .LVU6
  63 0000 10B5     	 push {r4,lr}
  64              	.LCFI0:
  65              	 .cfi_def_cfa_offset 8
  66              	 .cfi_offset 4,-8
  67              	 .cfi_offset 14,-4
  68              	 .loc 1 86 14 view .LVU7
  69 0002 2C4A     	 ldr r2,.L24
  70 0004 2C4B     	 ldr r3,.L24+4
  71 0006 116B     	 ldr r1,[r2,#48]
  72              	 .loc 1 86 25 view .LVU8
  73 0008 01F00301 	 and r1,r1,#3
  74              	 .loc 1 86 2 view .LVU9
  75 000c 0129     	 cmp r1,#1
  76 000e 2AD0     	 beq .L5
  77 0010 0239     	 subs r1,r1,#2
  78 0012 0129     	 cmp r1,#1
  79 0014 1DD8     	 bhi .L6
  87:.././hal/sam4s/system_sam4s.c **** 	case PMC_MCKR_CSS_SLOW_CLK: /* Slow clock */
  88:.././hal/sam4s/system_sam4s.c **** 			if ( SUPC->SUPC_SR & SUPC_SR_OSCSEL ) {
  89:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_XTAL_32K;
  90:.././hal/sam4s/system_sam4s.c **** 			} else {
  91:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_SLCK_RC;
  92:.././hal/sam4s/system_sam4s.c **** 			}
  93:.././hal/sam4s/system_sam4s.c **** 		break;
  94:.././hal/sam4s/system_sam4s.c **** 		
  95:.././hal/sam4s/system_sam4s.c **** 	case PMC_MCKR_CSS_MAIN_CLK: /* Main clock */
  96:.././hal/sam4s/system_sam4s.c **** 		if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  97:.././hal/sam4s/system_sam4s.c **** 			SystemCoreClock = CHIP_FREQ_XTAL;
  98:.././hal/sam4s/system_sam4s.c **** 		} else {
  99:.././hal/sam4s/system_sam4s.c **** 			SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 100:.././hal/sam4s/system_sam4s.c **** 			
 101:.././hal/sam4s/system_sam4s.c **** 			switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
 102:.././hal/sam4s/system_sam4s.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 103:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 104:.././hal/sam4s/system_sam4s.c **** 			break;
 105:.././hal/sam4s/system_sam4s.c **** 			
 106:.././hal/sam4s/system_sam4s.c **** 			case CKGR_MOR_MOSCRCF_8_MHz:
 107:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
 108:.././hal/sam4s/system_sam4s.c **** 			break;
 109:.././hal/sam4s/system_sam4s.c **** 			
 110:.././hal/sam4s/system_sam4s.c **** 			case CKGR_MOR_MOSCRCF_12_MHz:
 111:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
 112:.././hal/sam4s/system_sam4s.c **** 			break;
 113:.././hal/sam4s/system_sam4s.c **** 			
 114:.././hal/sam4s/system_sam4s.c **** 			default:
 115:.././hal/sam4s/system_sam4s.c **** 			break;
 116:.././hal/sam4s/system_sam4s.c **** 			}
 117:.././hal/sam4s/system_sam4s.c **** 		}
 118:.././hal/sam4s/system_sam4s.c **** 		break;
 119:.././hal/sam4s/system_sam4s.c **** 		
 120:.././hal/sam4s/system_sam4s.c **** 	case PMC_MCKR_CSS_PLLA_CLK:	/* PLLA clock */
 121:.././hal/sam4s/system_sam4s.c **** 	case PMC_MCKR_CSS_PLLB_CLK:	/* PLLB clock */
 122:.././hal/sam4s/system_sam4s.c **** 			if ( PMC->CKGR_MOR & CKGR_MOR_MOSCSEL ) {
  80              	 .loc 1 122 4 is_stmt 1 view .LVU10
  81              	 .loc 1 122 12 is_stmt 0 view .LVU11
  82 0016 116A     	 ldr r1,[r2,#32]
  83              	 .loc 1 122 7 view .LVU12
  84 0018 CC01     	 lsls r4,r1,#7
  85 001a 48D4     	 bmi .L16
 123:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_XTAL;
 124:.././hal/sam4s/system_sam4s.c **** 			} else {
 125:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
  86              	 .loc 1 125 5 is_stmt 1 view .LVU13
  87              	 .loc 1 125 21 is_stmt 0 view .LVU14
  88 001c 2749     	 ldr r1,.L24+8
  89 001e 1960     	 str r1,[r3]
 126:.././hal/sam4s/system_sam4s.c **** 				
 127:.././hal/sam4s/system_sam4s.c **** 				switch ( PMC->CKGR_MOR & CKGR_MOR_MOSCRCF_Msk ) {
  90              	 .loc 1 127 5 is_stmt 1 view .LVU15
  91              	 .loc 1 127 17 is_stmt 0 view .LVU16
  92 0020 116A     	 ldr r1,[r2,#32]
  93              	 .loc 1 127 28 view .LVU17
  94 0022 01F07001 	 and r1,r1,#112
  95 0026 1029     	 cmp r1,#16
  96 0028 3ED0     	 beq .L15
  97 002a 2029     	 cmp r1,#32
  98 002c 3FD0     	 beq .L16
  99              	.L14:
 128:.././hal/sam4s/system_sam4s.c **** 				case CKGR_MOR_MOSCRCF_4_MHz:
 129:.././hal/sam4s/system_sam4s.c **** 					SystemCoreClock = CHIP_FREQ_MAINCK_RC_4MHZ;
 130:.././hal/sam4s/system_sam4s.c **** 					break;
 131:.././hal/sam4s/system_sam4s.c **** 				
 132:.././hal/sam4s/system_sam4s.c **** 				case CKGR_MOR_MOSCRCF_8_MHz:
 133:.././hal/sam4s/system_sam4s.c **** 					SystemCoreClock = CHIP_FREQ_MAINCK_RC_8MHZ;
 134:.././hal/sam4s/system_sam4s.c **** 					break;
 135:.././hal/sam4s/system_sam4s.c **** 				
 136:.././hal/sam4s/system_sam4s.c **** 				case CKGR_MOR_MOSCRCF_12_MHz:
 137:.././hal/sam4s/system_sam4s.c **** 					SystemCoreClock = CHIP_FREQ_MAINCK_RC_12MHZ;
 138:.././hal/sam4s/system_sam4s.c **** 					break;
 139:.././hal/sam4s/system_sam4s.c **** 				
 140:.././hal/sam4s/system_sam4s.c **** 				default:
 141:.././hal/sam4s/system_sam4s.c **** 					break;
 142:.././hal/sam4s/system_sam4s.c **** 				}
 143:.././hal/sam4s/system_sam4s.c **** 			}
 144:.././hal/sam4s/system_sam4s.c **** 			
 145:.././hal/sam4s/system_sam4s.c **** 			if ( (uint32_t)(PMC->PMC_MCKR & (uint32_t) PMC_MCKR_CSS_Msk) ==
 100              	 .loc 1 145 4 is_stmt 1 view .LVU18
 101              	 .loc 1 145 23 is_stmt 0 view .LVU19
 102 002e 106B     	 ldr r0,[r2,#48]
 146:.././hal/sam4s/system_sam4s.c **** 					PMC_MCKR_CSS_PLLA_CLK ) {
 147:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock *= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_MULA_Msk)
 103              	 .loc 1 147 21 view .LVU20
 104 0030 1968     	 ldr r1,[r3]
 145:.././hal/sam4s/system_sam4s.c **** 					PMC_MCKR_CSS_PLLA_CLK ) {
 105              	 .loc 1 145 9 view .LVU21
 106 0032 00F00300 	 and r0,r0,#3
 145:.././hal/sam4s/system_sam4s.c **** 					PMC_MCKR_CSS_PLLA_CLK ) {
 107              	 .loc 1 145 7 view .LVU22
 108 0036 0228     	 cmp r0,#2
 109              	 .loc 1 147 5 is_stmt 1 view .LVU23
 110              	 .loc 1 147 31 is_stmt 0 view .LVU24
 111 0038 0BBF     	 itete eq
 112 003a 946A     	 ldreq r4,[r2,#40]
 148:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLAR_MULA_Pos) + 1U);
 149:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock /= ((((PMC->CKGR_PLLAR) & CKGR_PLLAR_DIVA_Msk)
 113              	 .loc 1 149 5 is_stmt 1 view .LVU25
 150:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLAR_DIVA_Pos));
 151:.././hal/sam4s/system_sam4s.c **** 			} else {
 152:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock *= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_MULB_Msk)
 114              	 .loc 1 152 31 is_stmt 0 view .LVU26
 115 003c D46A     	 ldrne r4,[r2,#44]
 149:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLAR_DIVA_Pos));
 116              	 .loc 1 149 31 view .LVU27
 117 003e 906A     	 ldreq r0,[r2,#40]
 118              	 .loc 1 152 5 is_stmt 1 view .LVU28
 153:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLBR_MULB_Pos) + 1U);
 154:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock /= ((((PMC->CKGR_PLLBR) & CKGR_PLLBR_DIVB_Msk)
 119              	 .loc 1 154 5 view .LVU29
 120              	 .loc 1 154 31 is_stmt 0 view .LVU30
 121 0040 D06A     	 ldrne r0,[r2,#44]
 153:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLBR_MULB_Pos) + 1U);
 122              	 .loc 1 153 7 view .LVU31
 123 0042 C4F30A44 	 ubfx r4,r4,#16,#11
 152:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLBR_MULB_Pos) + 1U);
 124              	 .loc 1 152 21 view .LVU32
 125 0046 04FB0111 	 mla r1,r4,r1,r1
 155:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLBR_DIVB_Pos));
 126              	 .loc 1 155 7 view .LVU33
 127 004a C0B2     	 uxtb r0,r0
 154:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLBR_DIVB_Pos));
 128              	 .loc 1 154 21 view .LVU34
 129 004c B1FBF0F1 	 udiv r1,r1,r0
 130 0050 07E0     	 b .L22
 131              	.L6:
  88:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_XTAL_32K;
 132              	 .loc 1 88 4 is_stmt 1 view .LVU35
  88:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_XTAL_32K;
 133              	 .loc 1 88 13 is_stmt 0 view .LVU36
 134 0052 1B49     	 ldr r1,.L24+12
 135 0054 496A     	 ldr r1,[r1,#36]
  88:.././hal/sam4s/system_sam4s.c **** 				SystemCoreClock = CHIP_FREQ_XTAL_32K;
 136              	 .loc 1 88 7 view .LVU37
 137 0056 0806     	 lsls r0,r1,#24
  89:.././hal/sam4s/system_sam4s.c **** 			} else {
 138              	 .loc 1 89 5 is_stmt 1 view .LVU38
  89:.././hal/sam4s/system_sam4s.c **** 			} else {
 139              	 .loc 1 89 21 is_stmt 0 view .LVU39
 140 0058 4CBF     	 ite mi
 141 005a 4FF40041 	 movmi r1,#32768
  91:.././hal/sam4s/system_sam4s.c **** 			}
 142              	 .loc 1 91 5 is_stmt 1 view .LVU40
  91:.././hal/sam4s/system_sam4s.c **** 			}
 143              	 .loc 1 91 21 is_stmt 0 view .LVU41
 144 005e 4FF4FA41 	 movpl r1,#32000
 145              	.L22:
 154:.././hal/sam4s/system_sam4s.c **** 						>> CKGR_PLLBR_DIVB_Pos));
 146              	 .loc 1 154 21 view .LVU42
 147 0062 1960     	 str r1,[r3]
 148 0064 0DE0     	 b .L10
 149              	.L5:
  96:.././hal/sam4s/system_sam4s.c **** 			SystemCoreClock = CHIP_FREQ_XTAL;
 150              	 .loc 1 96 3 is_stmt 1 view .LVU43
  96:.././hal/sam4s/system_sam4s.c **** 			SystemCoreClock = CHIP_FREQ_XTAL;
 151              	 .loc 1 96 11 is_stmt 0 view .LVU44
 152 0066 116A     	 ldr r1,[r2,#32]
  96:.././hal/sam4s/system_sam4s.c **** 			SystemCoreClock = CHIP_FREQ_XTAL;
 153              	 .loc 1 96 6 view .LVU45
 154 0068 C901     	 lsls r1,r1,#7
 155 006a 01D5     	 bpl .L11
 156              	.L13:
 111:.././hal/sam4s/system_sam4s.c **** 			break;
 157              	 .loc 1 111 5 is_stmt 1 view .LVU46
 111:.././hal/sam4s/system_sam4s.c **** 			break;
 158              	 .loc 1 111 21 is_stmt 0 view .LVU47
 159 006c 1549     	 ldr r1,.L24+16
 160 006e F8E7     	 b .L22
 161              	.L11:
  99:.././hal/sam4s/system_sam4s.c **** 			
 162              	 .loc 1 99 4 is_stmt 1 view .LVU48
  99:.././hal/sam4s/system_sam4s.c **** 			
 163              	 .loc 1 99 20 is_stmt 0 view .LVU49
 164 0070 1249     	 ldr r1,.L24+8
 165 0072 1960     	 str r1,[r3]
 101:.././hal/sam4s/system_sam4s.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 166              	 .loc 1 101 4 is_stmt 1 view .LVU50
 101:.././hal/sam4s/system_sam4s.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 167              	 .loc 1 101 16 is_stmt 0 view .LVU51
 168 0074 116A     	 ldr r1,[r2,#32]
 101:.././hal/sam4s/system_sam4s.c **** 			case CKGR_MOR_MOSCRCF_4_MHz:
 169              	 .loc 1 101 27 view .LVU52
 170 0076 01F07001 	 and r1,r1,#112
 171 007a 1029     	 cmp r1,#16
 172 007c 12D0     	 beq .L12
 173 007e 2029     	 cmp r1,#32
 174 0080 F4D0     	 beq .L13
 175              	.L10:
 156:.././hal/sam4s/system_sam4s.c **** 			}
 157:.././hal/sam4s/system_sam4s.c **** 		break;
 158:.././hal/sam4s/system_sam4s.c **** 		
 159:.././hal/sam4s/system_sam4s.c **** 	default:
 160:.././hal/sam4s/system_sam4s.c **** 		break;
 161:.././hal/sam4s/system_sam4s.c **** 	}
 162:.././hal/sam4s/system_sam4s.c **** 
 163:.././hal/sam4s/system_sam4s.c **** 	if ( (PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) == PMC_MCKR_PRES_CLK_3 ) {
 176              	 .loc 1 163 2 is_stmt 1 view .LVU53
 177              	 .loc 1 163 11 is_stmt 0 view .LVU54
 178 0082 106B     	 ldr r0,[r2,#48]
 164:.././hal/sam4s/system_sam4s.c **** 		SystemCoreClock /= 3U;
 179              	 .loc 1 164 19 view .LVU55
 180 0084 1968     	 ldr r1,[r3]
 163:.././hal/sam4s/system_sam4s.c **** 		SystemCoreClock /= 3U;
 181              	 .loc 1 163 22 view .LVU56
 182 0086 00F07000 	 and r0,r0,#112
 163:.././hal/sam4s/system_sam4s.c **** 		SystemCoreClock /= 3U;
 183              	 .loc 1 163 5 view .LVU57
 184 008a 7028     	 cmp r0,#112
 185              	 .loc 1 164 3 is_stmt 1 view .LVU58
 165:.././hal/sam4s/system_sam4s.c **** 	} else {
 166:.././hal/sam4s/system_sam4s.c **** 		SystemCoreClock >>=
 167:.././hal/sam4s/system_sam4s.c **** 			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
 186              	 .loc 1 167 9 is_stmt 0 view .LVU59
 187 008c 1BBF     	 ittet ne
 188 008e 126B     	 ldrne r2,[r2,#48]
 189              	 .loc 1 167 41 view .LVU60
 190 0090 C2F30212 	 ubfxne r2,r2,#4,#3
 164:.././hal/sam4s/system_sam4s.c **** 	} else {
 191              	 .loc 1 164 19 view .LVU61
 192 0094 0322     	 moveq r2,#3
 166:.././hal/sam4s/system_sam4s.c **** 			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
 193              	 .loc 1 166 19 view .LVU62
 194 0096 21FA02F2 	 lsrne r2,r1,r2
 164:.././hal/sam4s/system_sam4s.c **** 	} else {
 195              	 .loc 1 164 19 view .LVU63
 196 009a 08BF     	 it eq
 197 009c B1FBF2F2 	 udiveq r2,r1,r2
 166:.././hal/sam4s/system_sam4s.c **** 			((PMC->PMC_MCKR & PMC_MCKR_PRES_Msk) >> PMC_MCKR_PRES_Pos);
 198              	 .loc 1 166 3 is_stmt 1 view .LVU64
 199 00a0 1A60     	 str r2,[r3]
 168:.././hal/sam4s/system_sam4s.c **** 	}
 169:.././hal/sam4s/system_sam4s.c **** }
 200              	 .loc 1 169 1 is_stmt 0 view .LVU65
 201 00a2 10BD     	 pop {r4,pc}
 202              	.L12:
 107:.././hal/sam4s/system_sam4s.c **** 			break;
 203              	 .loc 1 107 5 is_stmt 1 view .LVU66
 107:.././hal/sam4s/system_sam4s.c **** 			break;
 204              	 .loc 1 107 21 is_stmt 0 view .LVU67
 205 00a4 0849     	 ldr r1,.L24+20
 206 00a6 DCE7     	 b .L22
 207              	.L15:
 133:.././hal/sam4s/system_sam4s.c **** 					break;
 208              	 .loc 1 133 6 is_stmt 1 view .LVU68
 133:.././hal/sam4s/system_sam4s.c **** 					break;
 209              	 .loc 1 133 22 is_stmt 0 view .LVU69
 210 00a8 0749     	 ldr r1,.L24+20
 211              	.L21:
 137:.././hal/sam4s/system_sam4s.c **** 					break;
 212              	 .loc 1 137 22 view .LVU70
 213 00aa 1960     	 str r1,[r3]
 138:.././hal/sam4s/system_sam4s.c **** 				
 214              	 .loc 1 138 6 is_stmt 1 view .LVU71
 215 00ac BFE7     	 b .L14
 216              	.L16:
 137:.././hal/sam4s/system_sam4s.c **** 					break;
 217              	 .loc 1 137 6 view .LVU72
 137:.././hal/sam4s/system_sam4s.c **** 					break;
 218              	 .loc 1 137 22 is_stmt 0 view .LVU73
 219 00ae 0549     	 ldr r1,.L24+16
 220 00b0 FBE7     	 b .L21
 221              	.L25:
 222 00b2 00BF     	 .align 2
 223              	.L24:
 224 00b4 00040E40 	 .word 1074660352
 225 00b8 00000000 	 .word .LANCHOR0
 226 00bc 00093D00 	 .word 4000000
 227 00c0 00140E40 	 .word 1074664448
 228 00c4 001BB700 	 .word 12000000
 229 00c8 00127A00 	 .word 8000000
 230              	 .cfi_endproc
 231              	.LFE124:
 233              	 .section .text.system_init_flash,"ax",%progbits
 234              	 .align 1
 235              	 .global system_init_flash
 236              	 .syntax unified
 237              	 .thumb
 238              	 .thumb_func
 239              	 .fpu softvfp
 241              	system_init_flash:
 242              	.LVL0:
 243              	.LFB125:
 170:.././hal/sam4s/system_sam4s.c **** 
 171:.././hal/sam4s/system_sam4s.c **** /**
 172:.././hal/sam4s/system_sam4s.c ****  * \brief Initialize flash wait state according to operating frequency.
 173:.././hal/sam4s/system_sam4s.c ****  *
 174:.././hal/sam4s/system_sam4s.c ****  * \param ul_clk System clock frequency.
 175:.././hal/sam4s/system_sam4s.c ****  */
 176:.././hal/sam4s/system_sam4s.c **** void system_init_flash( uint32_t ul_clk )
 177:.././hal/sam4s/system_sam4s.c **** {
 244              	 .loc 1 177 1 is_stmt 1 view-0
 245              	 .cfi_startproc
 246              	 
 247              	 
 248              	 
 178:.././hal/sam4s/system_sam4s.c ****   /* Set FWS for embedded Flash access according to operating frequency */
 179:.././hal/sam4s/system_sam4s.c **** #if !defined(ID_EFC1)
 180:.././hal/sam4s/system_sam4s.c **** 	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
 249              	 .loc 1 180 2 view .LVU75
 250              	 .loc 1 180 5 is_stmt 0 view .LVU76
 251 0000 0E4B     	 ldr r3,.L34
 252 0002 9842     	 cmp r0,r3
 253 0004 0E4B     	 ldr r3,.L34+4
 254 0006 03D8     	 bhi .L27
 181:.././hal/sam4s/system_sam4s.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
 255              	 .loc 1 181 3 is_stmt 1 view .LVU77
 256              	 .loc 1 181 18 is_stmt 0 view .LVU78
 257 0008 4FF08062 	 mov r2,#67108864
 258              	.L33:
 182:.././hal/sam4s/system_sam4s.c **** 	} else {
 183:.././hal/sam4s/system_sam4s.c **** 		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
 184:.././hal/sam4s/system_sam4s.c **** 			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
 185:.././hal/sam4s/system_sam4s.c **** 		} else {
 186:.././hal/sam4s/system_sam4s.c **** 			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
 187:.././hal/sam4s/system_sam4s.c **** 				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
 188:.././hal/sam4s/system_sam4s.c **** 			} else {
 189:.././hal/sam4s/system_sam4s.c **** 				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
 190:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
 191:.././hal/sam4s/system_sam4s.c **** 				} else {
 192:.././hal/sam4s/system_sam4s.c **** 					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
 193:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
 194:.././hal/sam4s/system_sam4s.c **** 					} else {
 195:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
 259              	 .loc 1 195 21 view .LVU79
 260 000c 1A60     	 str r2,[r3]
 196:.././hal/sam4s/system_sam4s.c **** 					}
 197:.././hal/sam4s/system_sam4s.c **** 				}
 198:.././hal/sam4s/system_sam4s.c **** 			}
 199:.././hal/sam4s/system_sam4s.c **** 		}
 200:.././hal/sam4s/system_sam4s.c **** 	}
 201:.././hal/sam4s/system_sam4s.c **** #else
 202:.././hal/sam4s/system_sam4s.c **** 	if ( ul_clk < CHIP_FREQ_FWS_0 ) {
 203:.././hal/sam4s/system_sam4s.c **** 		EFC0->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
 204:.././hal/sam4s/system_sam4s.c **** 		EFC1->EEFC_FMR = EEFC_FMR_FWS(0)|EEFC_FMR_CLOE;
 205:.././hal/sam4s/system_sam4s.c **** 	} else {
 206:.././hal/sam4s/system_sam4s.c **** 		if ( ul_clk < CHIP_FREQ_FWS_1 ) {
 207:.././hal/sam4s/system_sam4s.c **** 			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
 208:.././hal/sam4s/system_sam4s.c **** 			EFC1->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
 209:.././hal/sam4s/system_sam4s.c **** 		} else {
 210:.././hal/sam4s/system_sam4s.c **** 			if ( ul_clk < CHIP_FREQ_FWS_2 ) {
 211:.././hal/sam4s/system_sam4s.c **** 				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
 212:.././hal/sam4s/system_sam4s.c **** 				EFC1->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
 213:.././hal/sam4s/system_sam4s.c **** 			} else {
 214:.././hal/sam4s/system_sam4s.c **** 				if ( ul_clk < CHIP_FREQ_FWS_3 ) {
 215:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
 216:.././hal/sam4s/system_sam4s.c **** 					EFC1->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
 217:.././hal/sam4s/system_sam4s.c **** 				} else {
 218:.././hal/sam4s/system_sam4s.c **** 					if ( ul_clk < CHIP_FREQ_FWS_4 ) {
 219:.././hal/sam4s/system_sam4s.c **** 						EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
 220:.././hal/sam4s/system_sam4s.c **** 						EFC1->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
 221:.././hal/sam4s/system_sam4s.c **** 					} else {
 222:.././hal/sam4s/system_sam4s.c **** 						EFC0->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
 223:.././hal/sam4s/system_sam4s.c **** 						EFC1->EEFC_FMR = EEFC_FMR_FWS(5)|EEFC_FMR_CLOE;
 224:.././hal/sam4s/system_sam4s.c **** 					}
 225:.././hal/sam4s/system_sam4s.c **** 				}
 226:.././hal/sam4s/system_sam4s.c **** 			}
 227:.././hal/sam4s/system_sam4s.c **** 		}
 228:.././hal/sam4s/system_sam4s.c **** 	}
 229:.././hal/sam4s/system_sam4s.c **** #endif
 230:.././hal/sam4s/system_sam4s.c **** }
 261              	 .loc 1 230 1 view .LVU80
 262 000e 7047     	 bx lr
 263              	.L27:
 183:.././hal/sam4s/system_sam4s.c **** 			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
 264              	 .loc 1 183 3 is_stmt 1 view .LVU81
 183:.././hal/sam4s/system_sam4s.c **** 			EFC0->EEFC_FMR = EEFC_FMR_FWS(1)|EEFC_FMR_CLOE;
 265              	 .loc 1 183 6 is_stmt 0 view .LVU82
 266 0010 0C4A     	 ldr r2,.L34+8
 267 0012 9042     	 cmp r0,r2
 268 0014 01D2     	 bcs .L29
 184:.././hal/sam4s/system_sam4s.c **** 		} else {
 269              	 .loc 1 184 4 is_stmt 1 view .LVU83
 184:.././hal/sam4s/system_sam4s.c **** 		} else {
 270              	 .loc 1 184 19 is_stmt 0 view .LVU84
 271 0016 0C4A     	 ldr r2,.L34+12
 272 0018 F8E7     	 b .L33
 273              	.L29:
 186:.././hal/sam4s/system_sam4s.c **** 				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
 274              	 .loc 1 186 4 is_stmt 1 view .LVU85
 186:.././hal/sam4s/system_sam4s.c **** 				EFC0->EEFC_FMR = EEFC_FMR_FWS(2)|EEFC_FMR_CLOE;
 275              	 .loc 1 186 7 is_stmt 0 view .LVU86
 276 001a 0C4A     	 ldr r2,.L34+16
 277 001c 9042     	 cmp r0,r2
 278 001e 01D2     	 bcs .L30
 187:.././hal/sam4s/system_sam4s.c **** 			} else {
 279              	 .loc 1 187 5 is_stmt 1 view .LVU87
 187:.././hal/sam4s/system_sam4s.c **** 			} else {
 280              	 .loc 1 187 20 is_stmt 0 view .LVU88
 281 0020 0B4A     	 ldr r2,.L34+20
 282 0022 F3E7     	 b .L33
 283              	.L30:
 189:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
 284              	 .loc 1 189 5 is_stmt 1 view .LVU89
 189:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(3)|EEFC_FMR_CLOE;
 285              	 .loc 1 189 8 is_stmt 0 view .LVU90
 286 0024 0B4A     	 ldr r2,.L34+24
 287 0026 9042     	 cmp r0,r2
 288 0028 01D8     	 bhi .L31
 190:.././hal/sam4s/system_sam4s.c **** 				} else {
 289              	 .loc 1 190 6 is_stmt 1 view .LVU91
 190:.././hal/sam4s/system_sam4s.c **** 				} else {
 290              	 .loc 1 190 21 is_stmt 0 view .LVU92
 291 002a 0B4A     	 ldr r2,.L34+28
 292 002c EEE7     	 b .L33
 293              	.L31:
 192:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
 294              	 .loc 1 192 6 is_stmt 1 view .LVU93
 192:.././hal/sam4s/system_sam4s.c **** 					EFC0->EEFC_FMR = EEFC_FMR_FWS(4)|EEFC_FMR_CLOE;
 295              	 .loc 1 192 9 is_stmt 0 view .LVU94
 296 002e 0B4A     	 ldr r2,.L34+32
 297 0030 9042     	 cmp r0,r2
 193:.././hal/sam4s/system_sam4s.c **** 					} else {
 298              	 .loc 1 193 6 is_stmt 1 view .LVU95
 195:.././hal/sam4s/system_sam4s.c **** 					}
 299              	 .loc 1 195 21 is_stmt 0 view .LVU96
 300 0032 8CBF     	 ite hi
 301 0034 0A4A     	 ldrhi r2,.L34+36
 193:.././hal/sam4s/system_sam4s.c **** 					} else {
 302              	 .loc 1 193 21 view .LVU97
 303 0036 4FF00422 	 movls r2,#67109888
 195:.././hal/sam4s/system_sam4s.c **** 					}
 304              	 .loc 1 195 6 is_stmt 1 view .LVU98
 305 003a E7E7     	 b .L33
 306              	.L35:
 307              	 .align 2
 308              	.L34:
 309 003c FF2C3101 	 .word 19999999
 310 0040 000A0E40 	 .word 1074661888
 311 0044 005A6202 	 .word 40000000
 312 0048 00010004 	 .word 67109120
 313 004c 00879303 	 .word 60000000
 314 0050 00020004 	 .word 67109376
 315 0054 FFB3C404 	 .word 79999999
 316 0058 00030004 	 .word 67109632
 317 005c FFE0F505 	 .word 99999999
 318 0060 00050004 	 .word 67110144
 319              	 .cfi_endproc
 320              	.LFE125:
 322              	 .global SystemCoreClock
 323              	 .section .data.SystemCoreClock,"aw"
 324              	 .align 2
 325              	 .set .LANCHOR0,.+0
 328              	SystemCoreClock:
 329 0000 00093D00 	 .word 4000000
 330              	 .text
 331              	.Letext0:
 332              	 .file 2 "c:\\chipwh~2\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\machine\\_default_types.h"
 333              	 .file 3 "c:\\chipwh~2\\cw\\home\\portable\\armgcc\\arm-none-eabi\\include\\sys\\_stdint.h"
 334              	 .file 4 ".././hal/sam4s/inc/component/component_efc.h"
 335              	 .file 5 ".././hal/sam4s/inc/component/component_pmc.h"
 336              	 .file 6 ".././hal/sam4s/inc/component/component_supc.h"
 337              	 .file 7 ".././hal/sam4s/inc/system_sam4s.h"
DEFINED SYMBOLS
                            *ABS*:00000000 system_sam4s.c
    {standard input}:16     .text.SystemInit:00000000 $t
    {standard input}:24     .text.SystemInit:00000000 SystemInit
    {standard input}:42     .text.SystemInit:00000008 $d
    {standard input}:48     .text.SystemCoreClockUpdate:00000000 $t
    {standard input}:55     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
    {standard input}:224    .text.SystemCoreClockUpdate:000000b4 $d
    {standard input}:234    .text.system_init_flash:00000000 $t
    {standard input}:241    .text.system_init_flash:00000000 system_init_flash
    {standard input}:309    .text.system_init_flash:0000003c $d
    {standard input}:328    .data.SystemCoreClock:00000000 SystemCoreClock
    {standard input}:324    .data.SystemCoreClock:00000000 $d
                           .group:00000000 wm4.0.545a0e1134fc651afe6e71660705947f
                           .group:00000000 wm4._newlib_version.h.4.1ef4e12f167f8b69d7c30054be56050d
                           .group:00000000 wm4.features.h.33.5bd1eea2d80518b50f7af0b5ce6750e0
                           .group:00000000 wm4._default_types.h.15.247e5cd201eca3442cbf5404108c4935
                           .group:00000000 wm4._intsup.h.10.48bafbb683905c4daa4565a85aeeb264
                           .group:00000000 wm4._stdint.h.10.c24fa3af3bc1706662bb5593a907e841
                           .group:00000000 wm4.stdint.h.23.d53047a68f4a85177f80b422d52785ed
                           .group:00000000 wm4.sam4s2b.h.221.db99b1f5dbb5d4301dbbbaff13b63e70
                           .group:00000000 wm4.core_cm4.h.43.9593ac0dcec24a3a6f1d638d754e90b2
                           .group:00000000 wm4.core_cmInstr.h.39.53f0cdf363d7ba01993152fdcb6be5d3
                           .group:00000000 wm4.core_cmSimd.h.43.c355993beb49ccd10586af5b1cfe5aee
                           .group:00000000 wm4.core_cm4.h.201.504dd1a6bdf57a6296d26f255ae618b9
                           .group:00000000 wm4.component_acc.h.36.308f7d4c1685c8ebd00910c37bbeab26
                           .group:00000000 wm4.component_adc.h.36.b8477219496e42be1d01ccb1b6f6b02b
                           .group:00000000 wm4.component_chipid.h.36.cb4a4222aca9bee8d01f4aa49afe4d6d
                           .group:00000000 wm4.component_crccu.h.36.1d71ce61706000275b271d03beaec6d2
                           .group:00000000 wm4.component_dacc.h.36.0b87b1e719912b5885bdf9531e0e43d6
                           .group:00000000 wm4.component_efc.h.36.a6b4458c43d27669aaa6147006e1eb74
                           .group:00000000 wm4.component_gpbr.h.36.595122ea9c79505c4e73c9e7421802a8
                           .group:00000000 wm4.component_hsmci.h.36.ccf6dd1a128877835aec3d40c12745dd
                           .group:00000000 wm4.component_matrix.h.36.8f1d7aeed86a08ab4d936e5a0f026440
                           .group:00000000 wm4.component_pdc.h.36.363e6546b41ce8a14a922d18930df184
                           .group:00000000 wm4.component_pio.h.36.f033c3341fbeea7d2a04545c9a72bd24
                           .group:00000000 wm4.component_pmc.h.36.2771b76afbda6351cb4cf4c6708887d5
                           .group:00000000 wm4.component_pwm.h.36.0cd735c74e99ef7d330cb87d1f16c213
                           .group:00000000 wm4.component_rstc.h.36.1af4b8140176d86bc0af5b861fd3a623
                           .group:00000000 wm4.component_rtc.h.36.c865407d28492a40a128dee548893efe
                           .group:00000000 wm4.component_rtt.h.36.46adad6456893b38ef49ae9a2d0afea1
                           .group:00000000 wm4.component_spi.h.36.a18850bcdd90fcb2d130155fa94829ea
                           .group:00000000 wm4.component_ssc.h.36.6ffc46b5a0a9219bd5c90b3f63510b0f
                           .group:00000000 wm4.component_supc.h.36.0db4554695c6e864e5338e4faca84d88
                           .group:00000000 wm4.component_tc.h.36.af47419b07ade32b2d1423414983d2f7
                           .group:00000000 wm4.component_twi.h.36.3496bc3884f63f906fd446649da75de1
                           .group:00000000 wm4.component_uart.h.36.74e9355d463b56860c56764a9be37213
                           .group:00000000 wm4.component_udp.h.36.8cb9530d4bf5319aabe6158f5e738b3d
                           .group:00000000 wm4.component_usart.h.36.5e91c114006f7b551a45955ae29cb6cf
                           .group:00000000 wm4.component_wdt.h.36.277adc27b017beabbb9f7b11b0fa46f2
                           .group:00000000 wm4.instance_hsmci.h.36.9855cb84ff287cffb479099857800873
                           .group:00000000 wm4.instance_ssc.h.36.630afe78e802d5fc05c6224c23890fe1
                           .group:00000000 wm4.instance_spi.h.36.325bf539a06b58ad3327698a7ef68d81
                           .group:00000000 wm4.instance_tc0.h.36.fbfa021f96aebd3d46fa1937156b0b0a
                           .group:00000000 wm4.instance_twi0.h.36.13a0f0822f7bd9074e9b846b04ed10b9
                           .group:00000000 wm4.instance_twi1.h.36.6c6b55c3fab76b3818eb5314bf7bc410
                           .group:00000000 wm4.instance_pwm.h.36.1b555f9fd14d69df968818a3882b2cde
                           .group:00000000 wm4.instance_usart0.h.36.3b6138f7be7c01038525724f6c5d6c1e
                           .group:00000000 wm4.instance_usart1.h.36.137c36ec170c7ca2c1f8e046f5d0e0c9
                           .group:00000000 wm4.instance_udp.h.36.b94eabb27893117a74b4d6faebd80bc6
                           .group:00000000 wm4.instance_adc.h.36.84184448551cb0a3c52160d178904d14
                           .group:00000000 wm4.instance_dacc.h.36.28a68c12285ab1a6b24d06876c4b8807
                           .group:00000000 wm4.instance_acc.h.36.71d96a8f2214f8a9d18eec4d2d93f130
                           .group:00000000 wm4.instance_crccu.h.36.549cca511b407ab33982b56bae0c25ac
                           .group:00000000 wm4.instance_matrix.h.36.da03b47f7e819cfcead8ef1cd71b60ce
                           .group:00000000 wm4.instance_pmc.h.36.002f4765e9f18dc4b183b779163ab06e
                           .group:00000000 wm4.instance_uart0.h.36.fa62b2ed6ce17806cd77556aa65a73f5
                           .group:00000000 wm4.instance_chipid.h.36.6f5f676d52e3e21dba5d88a4bb87d922
                           .group:00000000 wm4.instance_uart1.h.36.bc11f9c4189a4ac15cce81cf9f40fcf9
                           .group:00000000 wm4.instance_efc0.h.36.67a3a70e962ac1d6ef8fcee0e9fd4a9b
                           .group:00000000 wm4.instance_pioa.h.36.27d92aa6d00d8b6a2b34acdeee1aa60a
                           .group:00000000 wm4.instance_piob.h.36.b0f95d3fb66ff01bcd91fb6a4cb54dc3
                           .group:00000000 wm4.instance_rstc.h.36.f8bcddbd3310cbb6a39c155e9e6b3cfb
                           .group:00000000 wm4.instance_supc.h.36.17878f57a77a9d368090917738ff3e02
                           .group:00000000 wm4.instance_rtt.h.36.8759ab7e2580c101b6db702769407cb0
                           .group:00000000 wm4.instance_wdt.h.36.ab83587b138c65dcd29a29119835b92a
                           .group:00000000 wm4.instance_rtc.h.36.52aa67a6a7c945bf00db9fb9d057e3e0
                           .group:00000000 wm4.instance_gpbr.h.36.b2cfd4dee03ed0c28ecb9eb233d2ac42
                           .group:00000000 wm4.sam4s2b.h.313.04ed20c80f538f8fadb9388a8469283e
                           .group:00000000 wm4.pio_sam4s2b.h.36.e1b33fead6a6e1ee98b2f4cba4bb11b4
                           .group:00000000 wm4.sam4s2b.h.450.98a9c8ea67d90470c8554ffe87c8398a

NO UNDEFINED SYMBOLS
